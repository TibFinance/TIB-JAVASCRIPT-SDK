var System = {}, Events, Trace, property, name; window.System = { __namespace: !0, __typeName: "Sys", getName: function () { return "Sys" }, __upperCaseTypes: {} }; System.Type = function () { function n() { var t = "", n; t = arguments[0]; this.FullName = t; n = []; t && (n = t.split("."), this.Name = n[n.length - 1], this.Namespace = n.slice(0, n.length - 2).join(".")) } this.Name = "name"; this.Namespace = ""; this.FullName = ""; this.ToSting = function () { return this.FullName }; n.apply(this, arguments) }; System.Type.Inherits = function (n, t) { for (var i in t) i != "__typeName" && i != "GetType" && (n[i] = t[i]); return t }; System.Type.RegisterNamespace = function (n) { var i, u, r, f, t; if (typeof Type != "undefined" && typeof Type.registerNamespace == "function") Type.registerNamespace(n); else for (i = window, u = n.split("."), r = 0; r < u.length; r++)f = u[r], t = i[f], t || (t = i[f] = {}), t.__typeName = n, t.__namespace = !0, i = t }; System.Type.RegisterClass = function (n, t, i) { var r, u; typeof Type != "undefined" && typeof Type.registerClass == "function" ? Type.registerClass(n, t, i) : (r = eval(n), r.__typeName = n, r.__class = !0); u = eval(n); u.prototype.GetType = function () { return new System.Type(n) } }; System.Type.RegisterInterface = function () { }; System.Type.RegisterEnum = function (n, t) { var i, r; if (typeof Type != "undefined" && typeof Type.registerEnum == "function") Type.registerEnum(n, t); else { i = eval(n); for (r in i.prototype) i[r] = i.prototype[r]; i.__enum = !0; i.__flags = t } }; System.Type.RegisterProperty = function (n) { var t = me[n]; me[n] = function (t) { if (arguments.length == 0) return me[n].get(); arguments.length == 1 && me[n].set(t) } }; System.Type.RegisterNamespace("System"); System.Type.RegisterClass("System.Type"); System.Type.GetType = function (n) { return new System.Type(n) }; System.TypeCode = function () { }; System.TypeCode.prototype = { Empty: 0, Object: 1, DBNull: 2, Boolean: 3, Char: 4, SByte: 5, Byte: 6, Int16: 7, UInt16: 8, Int32: 9, UInt32: 10, Int64: 11, UInt64: 12, Single: 13, Double: 14, Decimal: 15, DateTime: 16, String: 18 }; System.Type.RegisterEnum("System.TypeCode"); System.TimeUnitType = function () { }; System.TimeUnitType.prototype = { Seconds: 0, Minutes: 1, Hours: 2, Days: 3 }; System.Type.RegisterEnum("System.TimeUnitType"); System.SR = function () { }; System.SR.prototype = { NotReadableStream: "The base stream is not readable.", NotWriteableStream: "The base stream is not writeable.", ArgumentOutOfRange_Enum: "Enum value was out of legal range." }; System.Type.RegisterClass("System.SR"); System.SR.GetString = function (n) { var t = System.SR.prototype[n]; return t || (t = n), t }; System.Extensions = function () { this.Apply = function () { var n = !1; typeof Response == "object" && (n = !0); n || typeof this.$ == "undefined" && (this.$ = function () { return document.getElementById(arguments[0]) }); Date.prototype.SubtractDays = System.DateTime.SubtractDays; Date.prototype.SubtractMonths = System.DateTime.SubtractMonths; Date.prototype.GetFromString = System.DateTime.GetFromString; Date.prototype.GetFromUtcString = System.DateTime.GetFromUtcString; Date.prototype.DefaultFormat = "yyyy-MM-dd HH:mm:ss"; Date.prototype.toString = System.DateTime.ToString; Date.prototype.ToString = System.DateTime.ToString; Date.prototype.toUtcString = System.DateTime.ToUtcString; Date.prototype.Subtract = System.DateTime.Subtract; Date.prototype.Ticks = System.DateTime.Ticks; Date.prototype.ToUniversalTime = System.DateTime.ToUniversalTime; Number.prototype.ToString = Number.prototype.toString; String.prototype.Trim = function (n) { return System.Text.Trim(this, n) }; String.prototype.ToCamelCase = function () { return System.Text.ToCamelCase(this) }; String.Format = function () { return String._toFormattedString(!1, arguments) }; String._toFormattedString = function (n, t) { for (var o, u, e = "", f = t[0], i = 0; ;) { if (o = f.indexOf("{", i), u = f.indexOf("}", i), o < 0 && u < 0) { e += f.slice(i); break } if (u > 0 && (u < o || o < 0)) { e += f.slice(i, u + 1); i = u + 2; continue } if (e += f.slice(i, o), i = o + 1, f.charAt(i) === "{") { e += "{"; i++; continue } var s = f.substring(i, u), h = s.indexOf(":"), l = parseInt(h < 0 ? s : s.substring(0, h), 10) + 1, c = h < 0 ? "" : s.substring(h + 1), r = t[l]; (typeof r == "undefined" || r === null) && (r = ""); e += r.toFormattedString ? r.toFormattedString(c) : n && r.localeFormat ? r.localeFormat(c) : r.format ? r.format(c) : r.toString(); i = u + 1 } return e }; String.prototype.Format = function () { var t = [], n; for (t.push(this), n = 0; n < arguments.length; n++)t.push(arguments[n]); return String._toFormattedString(!1, t) }; String.Join = function (n, t, i, r) { var u; if (n || (n = ""), i || (i = 0), r || (r = t.length), r == 0) return ""; var e = i + r - 1, f = ""; for (u = i; u <= e; u++)u > i && (f += n), f += t[u]; return f }; Array.prototype.Clone = function () { for (var t = this.slice(0, this.length), n = 0; n < this.length; n++)t[n] = this[n]; return t } } }; System.Type.RegisterClass("System.Extensions"); System.AsyncCallback = function () { }; System.Type.RegisterClass("System.AsyncCallback"); System.AsyncWriteDelegate = function () { }; System.Type.RegisterClass("System.AsyncWriteDelegate"); System.GetScriptsPath = function () { for (var i = "", r, u = new RegExp("System(.debug)?.js", "gi"), f = document.getElementsByTagName("head")[0], t = f.getElementsByTagName("script"), n = 0; n < t.length; n++)if (r = t[n].src.match(u), r) { i = t[n].src.replace(u, ""); break } if (i.length == 0) for (t = document.getElementsByTagName("script"), n = 0; n < t.length; n++)if (r = t[n].src.match(u), r) { i = t[n].src.replace(u, ""); break } return i }; System.Extensions = new System.Extensions; System.Type.Class = System.Type.Class ? System.Type.Class : {}; System.Type.Class.Root = this; System.Type.Class.Inherit = function () { var n, i, u, t; for (Trace.Write("exec System.Class.Inherit(arguments){", 1), this.Classes = [], this.Objects = [], n = 0; n < arguments.length; n++)arguments[n].prototype.NoInit = !0, this.Objects.push(new arguments[n]), arguments[n].prototype.NoInit = !1, this.Classes.push(arguments[n]); for (n = 0; n < this.Objects.length; n++)n == 0 ? Trace.Write("Inherit: '" + this.Objects[n].Type + "' Class From: ", 1) : Trace.Write(this.Objects[n].Type); for (Trace.Write("Done", -2), i = this.Classes[0], u = this.Objects[0], t = this.Classes.length - 1; t > 0; t--) { var f = this.Classes[t], r = this.Objects[t], e = this.Objects[t - 1], o = this.Classes[t - 1]; Trace.Write("// Inherit: '" + e.Type + "' From: '" + r.Type + "'"); i.prototype = r; Trace.Write("1. Import Class Properties: " + u.Type + ".prototype <- " + r.Type, 1); Trace.Write("End Import", -2); Trace.Write("2. Fix Prototype Constructor", 1); i.prototype.constructor = i; Trace.Write("End Fix", -2); Trace.Write("3. Allow to call methods in a superclass", 1); Trace.Write("Import Superclass Properties: " + u.Type + ".superclass <- " + r.Type + ".prototype"); i.superclass = f.prototype; Trace.Write("End Import", -2) } Trace.Write("} //System.Class.Inherit(arrguments)", -2) }; System.Type.Class.Inherit = function (n, t) { n.prototype = new t; n.prototype.constructor = n; n.superclass = t.prototype }; System.Type.Class.Exists = function (n) { var t, r, u, i, f; for (t = typeof Response == "object" ? System.Class.Root : System.Class.Root, r = !0, u = n.split("."), i = 0; i < u.length; i++) { if (f = u[i], !t[f]) { r = !1; break } t = t[f] } return r }; System.Class = System.Class ? System.Class : {}; System.Class.Inherit = System.Type.Class.Inherit; System.Class.Root = this; System.Uri = function () { function n() { var n = arguments[0]; this.OriginalString = n; this.AbsolutePath = n.indexOf("?") > -1 ? n.substring(0, n.indexOf("?") - 1) : n; this.Query = n.indexOf("?") > -1 ? n.substring(n.indexOf("?"), n.length) : null; this.QueryParams = this.GetParameters(this.Query) } this.OriginalString; this.AbsolutePath; this.Query; this.QueryParams; this.GetType = function () { return new System.Type("System.Uri") }; this.GetQueryValue = function (n, t) { var u = null, r, i; t == !0 && (n = n.toLowerCase()); for (i in this.QueryParams) if (r = i, t == !0 && (r = i.toLowerCase()), n == r) { u = this.QueryParams[i]; break } return u }; this.GetParameters = function (n) { var u = {}, e, f, t, o, i, r; if (n == null) return u; for (e = n.substring(n.indexOf("?") + 1, n.length), f = e.split("&"), r = 0; r < f.length; r++)t = f[r], o = t.substring(0, t.indexOf("=")), i = t.substring(t.indexOf("=") + 1, t.length), i = unescape(i), u[o] = i; return u }; n.apply(this, arguments) }; System.Type.RegisterClass("System.Uri"); System.EventItem = function () { this.Node; this.Name; this.Handler; this.Capture }; System.Type.RegisterClass("System.EventItem"); System.EventHandler = function (n, t, i) { var r = this; this.Method = null; this.Target = null; this.Timeout = null; this.Invoke = function () { if (typeof this.Timeout == "number") setTimeout(function () { return this.Method.apply(this.Target, arguments) }, this.Timeout); else return this.Method.apply(this.Target, arguments) }; this.InvokeNative = function () { var u = arguments[0] || window.event, f = u.target || u.srcElement, r = new Array(2); if (r[0] = f, r[1] = u, typeof i == "number") setTimeout(function () { return t.apply(n, r) }, i); else return t.apply(n, r) }; this.Initialize = function () { this.Target = n; this.Method = t }; this.Initialize() }; System.Type.RegisterClass("System.EventHandler"); System.Event = function (n) { this.args = {}; this._delegates = []; this.name = n; this.Add = function (n) { this._delegates[this._delegates.length] = n }; this.Remove = function (n) { for (i = this._delegates.length - 1; i >= 0; i = i - 1)n == this._delegates[i] && this._delegates.splice(i, 1) }; this.Fire = function (n, t) { for (var i = 0; i < this._delegates.length; i++)this._delegates[i].Invoke(n, t) } }; System.Type.RegisterClass("System.Event"); System.EventArgs = function () { this.Name = ""; this.ToString = function () { var i = "", t, n; for (t in this) n = !1, n = n || t == "Initialize", n = n || t == "ToString", n || (i += t + "='" + this[t] + "';"); return "e[" + i + "]" }; this.Initialize = function (n) { this.Name = n ? n : "" }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.EventArgs"); System.EventsManager = function (n) { this.Items = null; this.Context = null; var t = this; this.Add = function (n, t, i, r) { var f = !0, u, e; return typeof n == "string" ? (n = this.Context.document.getElementById(n), u = n) : u = n.id, Trace && Trace.Write("call " + this.GetType().Name + ".Add(node, '" + t + "', eventHandler, " + r + ")"), n ? typeof r != "boolean" ? n[t].Add(i) : (i.GetType && i.GetType().FullName == "System.EventHandler" && (i = i.InvokeNative), n.addEventListener ? n.addEventListener(t, i, r) : n.attachEvent && (Trace && Trace.Write("thru System.EventHandler: " + i.Type), e = n.attachEvent("on" + t, i)), this.AddItem(n, t, i, r)) : (Trace && Trace.Write("Error: " + this.GetType().Name + ".Add(...) - node '" + u + "' was not found!"), f = !1), f }; this.Remove = function (n, t, i) { typeof n == "string" && (n = this.Context.document.getElementById(n)); this.RemoveItem(n, t, i) }; this.AddItem = function (n, t, i, r) { var u = new System.EventItem; u.Node = n; u.Name = t; u.Handler = i; u.Capture = r; this.Items.push(u) }; this.RemoveItem = function (n, t, i) { for (var r, u = this.Items.length - 1; u >= 0; u = u - 1)r = this.Items[u], typeof r.Capture != "boolean" ? r.Node[r.Name].Remove(r.Handler) : (i.GetType && i.GetType().FullName == "System.EventHandler" && (i = i.InvokeNative), n == r.Node && t == r.Name && i == r.Handler && (r.Node.removeEventListener ? r.Node.removeEventListener(r.Name, r.Handler, r.Capture) : r.Node.detachEvent && r.Node.detachEvent("on" + r.Name, r.Handler))) }; this.Dispose = function () { for (var n, r, i = t.Items.length - 1; i >= 0; i = i - 1)n = t.Items[i], typeof n.Capture != "boolean" ? n.Node[n.Name].Remove(n.Handler) : (r = n.Handler, r.GetType && r.GetType().FullName == "System.EventHandler" && (r = r.InvokeNative), n.Node.removeEventListener ? n.Node.removeEventListener(n.Name, n.Handler, n.Capture) : n.Node.detachEvent && n.Node.detachEvent("on" + n.Name, n.Handler)) }; this.InitializeClass = function () { this.Context = n ? n : window; this.Items = []; this.Add(this.Context, "unload", new System.EventHandler(this, this.Dispose), !1) }; this.InitializeClass() }; System.Type.RegisterClass("System.EventsManager"); typeof Response != "object" && (Events = new System.EventsManager, System.EventsManager.Current = new System.EventsManager); Error.create = function (n, t) { var i = new Error(n), r; if (i.message = n, t) for (r in t) i[r] = t[r]; return i.popStackFrame(), i }; Error.prototype.popStackFrame = function () { var r, t; if (arguments.length !== 0) throw Error.parameterCount(); if (typeof this.stack != "undefined" && this.stack !== null && typeof this.fileName != "undefined" && this.fileName !== null && typeof this.lineNumber != "undefined" && this.lineNumber !== null) { for (var n = this.stack.split("\n"), i = n[0], u = this.fileName + ":" + this.lineNumber; typeof i != "undefined" && i !== null && i.indexOf(u) === -1;)n.shift(), i = n[0]; (r = n[1], typeof r != "undefined" && r !== null) && (t = r.match(/@(.*):(\d+)$/), typeof t != "undefined" && t !== null) && (this.fileName = t[1], this.lineNumber = parseInt(t[2]), n.shift(), this.stack = n.join("\n")) } }; System.Exception = function () { }; System.Exception = function () { switch (arguments.length) { case 1: if (typeof arguments[0].GetType == "function") return arguments[0]; this.message = arguments[0] }var n = Error.create(this.message, { name: this.GetType().FullName }); return n.popStackFrame(), n }; System.Type.RegisterClass("System.Exception"); System.ArgumentNullException = function (n, t) { this.message = ""; this.message += t ? t : "Value cannot be null."; this.message += "\r\nParameter name: '" + n + "'"; var i = Error.create(this.message, { name: this.GetType().FullName }); return i.popStackFrame(), i }; System.Type.RegisterClass("System.ArgumentNullException"); System.ArgumentException = function (n, t) { var r = new System.Type.Inherits(this, new System.Exception), i; return this.message = "", this.message += n, this.message += t ? "\r\nParameter name: '" + t + "'" : "", i = Error.create(this.message, { name: this.GetType().FullName }), i.popStackFrame(), i }; System.Type.RegisterClass("System.ArgumentException"); System.ObjectDisposedException = function (n, t) { var r = new System.Type.Inherits(this, new System.Exception), i; return this.message = "", this.message += t ? t : "Cannot access a disposed object.", this.message += "\r\nObject name: '" + n + "'", i = Error.create(this.message, { name: this.GetType().FullName }), i.popStackFrame(), i }; System.Type.RegisterClass("System.ObjectDisposedException"); System.Class.ExceptionToString = function (n) { var t = new System.Exception(n); return typeof Response == "object" ? "Error: Exception[number=" + t.number + "; name='" + t.GetType().FullName + "'; message='" + t.message + "'; description='" + t.description + "']" : "Error: Exception[result=" + t.result + "; name='" + t.GetType().FullName + "'; message='" + t.message + "']" }; System.Class.ExceptionToTrace = function (n) { Trace.Write(System.Class.ExceptionToString(n)) }; System.Class.Properties = {}; System.Class.Properties.ToString = function (n) { var i = "", t, r, u; i += typeof n + " properties:\r\n"; for (t in n) r = typeof n[t], u = n[t], i += r + " " + t + " = " + u + "\r\n"; return i }; System.Class.Properties.ToTrace = function (n, t, i, r) { var u, f, e, o, s; if (typeof n == "object" && typeof t == "undefined") try { t = new String(n) } catch (h) { System.Class.ExceptionToTrace(h) } typeof r == "undefined" && (r = 3); i == !1 && (r = 0); try { Trace.LevelUpdate(1); for (u in n) f = "." + u, f += typeof n[u] == "string" ? '<font color="gray"> = \'' + n[u] + "'<\/font>" : '<font color="gray"> = ' + n[u] + "<\/font>", r > 1 && (e = typeof n[u] == "object" || u == "prototype" || u == "superclass", n[u] == null && (e = !1), e ? (o = "." + u, s = r - 1, Trace.Write(f + " {", 1), System.Class.ListProperties(n[u], o, !0, s), Trace.Write("}", -2)) : Trace.Write(f)) } catch (h) { } Trace.LevelUpdate(-1); t != null && Trace.Write("}") }; System.Class.ListProperties = function (n, t, i, r) { System.Class.Properties.ToTrace(n, t, i, r) }; System.Parse = function (n, t) { var i = null; switch (typeof n) { case "boolean": i = System.Bool.Parse(t); break; case "number": i = parseFloat(t); break; case "string": i = t; break; case "object": i = t; typeof n.getDate == "function" && (i = (new Date).GetFromString(t)); default: i = t }return i }; System.Bool = function () { }; System.Type.RegisterClass("System.Bool"); System.Bool.Parse = function (n) { var t = new String(n).toLowerCase(); return t == "true" || t == "1" || t == "-1" || t == "on" || t == "yes" ? !0 : !1 }; System.Bool.IsBoolean = function (n) { n = new String(n).toLowerCase(); return n == "true" || n == "false" || n == "1" || n == "0" || n == "-1" || n == "on" || n == "off" || n == "yes" || n == "no" }; System.Guid = function () { }; System.Guid = function () { }; System.Guid = function () { this.Bytes = []; this.ByteOrder = [3, 2, 1, 0, 5, 4, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15]; this.ToString = function (n) { var r, t, i, u; for (n = n ? n : "D", r = "DBP".indexOf(n) > -1, t = "", i = 0; i < 16; i++)r && (t += i == 4 || i == 6 || i == 8 || i == 10 ? "-" : ""), u = this.ByteOrder[i], t += this.numberToHex(this.Bytes[u]); return n == "B" && (t = "{" + t + "}"), n == "P" && (t = "(" + t + ")"), t }; this.toString = this.ToString; this.ToByteArray = function () { return this.Bytes }; this.Equals = function (n) { var i = n, r = !0, t; for (typeof n != "object" && (i = new System.Guid(n)), t = 0; t < 16; t++)if (this.Bytes[t] != i.Bytes[t]) { r = !1; break } return r }; this.numberToHex = function (n) { var t = n <= 15 ? "0" : ""; return t + n.toString(16) }; this.GuidStringToBytes = function (n) { for (var f = new RegExp("[{}()-]", "g"), i = n.replace(f, ""), r = [], t = 0; t < 16; t++) { var u = this.ByteOrder[t], e = i.charAt(u * 2), o = i.charAt(u * 2 + 1); r.push(unescape("%" + e + o).charCodeAt(0)) } return r }; this.InitializeClass = function () { this.Bytes = []; var t = arguments[0], n; switch (typeof t) { case "null": for (n = 0; n < 16; n++)this.Bytes.push(0); break; case "undefined": for (n = 0; n < 16; n++)this.Bytes.push(0); break; case "string": this.Bytes = this.GuidStringToBytes(t); break; case "object": if (t.GetType && t.GetType().FullName == "System.Guid") for (n = 0; n < 16; n++)this.Bytes.push(t.Bytes[n]); else for (n = 0; n < 16; n++)this.Bytes.push(t[n]) } }; this.InitializeClass.apply(this, arguments) }; System.Type.RegisterClass("System.Guid"); System.Guid.Empty = new System.Guid("00000000-0000-0000-0000-000000000000"); System.Guid.NewGuid = function () { for (var i, n = [], t = 0; t < 16; t++)i = Math.floor(Math.random() * 255), n.push(i); return new System.Guid(n) }; System.Math = System.Math ? System.Math : {}; System.Math.ShiftRight = function (n, t) { var i = Math.pow(2, t), r = n & i - 1, u = n - r; return u / i }; System.Math.ShiftLRight = function (n, t) { var i = Math.pow(2, t), r = n & i - 1, u = n - r; return u / i }; System.Math.ShiftLeft = function (n, t) { return n * Math.pow(2, t) }; System.Random = function () { this.Next = function () { }; this.Next = function (n, t) { switch (arguments.length) { case 0: t = Math.pow(2, 31); n = 0; break; case 1: t = arguments[0]; n = 0; break; case 2: break; default: return 0 }var i = n; return t > n && (i = Math.floor(Math.random() * (t - n)) + n), i }; this.NextBytes = function (n) { for (var i = n.length, t = 0; t < i; t++)n[t] = this.Next(0, 256); return n }; this.InitializeClass = function () { }; this.InitializeClass.apply(this, arguments) }; System.Type.RegisterClass("System.Random"); System.TimeSpan = function () { function t() { for (var u, t = ["Days", "Hours", "Minutes", "Seconds", "Milliseconds"], f = arguments.length, n = 0; n < f; n++)u = t.length - arguments.length, this[t[u + n]] = arguments[n]; i(); r() } function i() { var t = 0, i = 0; t = n.Milliseconds % 1e3; i = (n.Milliseconds - t) / 1e3; n.Milliseconds = t; n.Seconds += i; t = n.Seconds % 60; i = (n.Seconds - t) / 60; n.Seconds = t; n.Minutes += i; t = n.Minutes % 60; i = (n.Minutes - t) / 60; n.Minutes = t; n.Hours += i; t = n.Hours % 24; i = (n.Hours - t) / 24; n.Hours = t; n.Days += i } function r() { var t = n.Days * 24; t = (t + n.Hours) * 60; t = (t + n.Minutes) * 60; n.Ticks = (t + n.Seconds) * 1e3 + n.Milliseconds; n.TotalMilliseconds = n.Ticks; n.TotalSeconds = n.TotalMilliseconds / 1e3; n.TotalMinutes = n.TotalSeconds / 60; n.TotalHours = n.TotalMinutes / 60; n.TotalDays = n.TotalHours / 24 } this.Ticks = 0; this.Milliseconds = 0; this.Seconds = 0; this.Minutes = 0; this.Hours = 0; this.Days = 0; this.TotalMilliseconds = 0; this.TotalSeconds = 0; this.TotalMinutes = 0; this.TotalHours = 0; this.TotalDays = 0; var n = this; this.Add = function () { var n = arguments[0], t, i; return typeof arguments[0] == "number" && (n = new System.TimeSpan.apply(this, arguments)), t = this.Ticks + n.Ticks, i = new System.TimeSpan(t), i }; this.Subtract = function () { var n = arguments[0], t, i; return typeof arguments[0] == "number" && (n = new System.TimeSpan.apply(this, arguments)), t = this.Ticks - n.Ticks, i = new System.TimeSpan(t), i }; this.ToString = function (n) { var t = "", i = n == "X" ? " days " : " ", r = n == "X" ? " hours " : ":", u = n == "X" ? " min " : ":", f = n == "X" ? " sec" : ""; return (this.TotalDays >= 1 || n == "F") && (t += this.Days + i), t += (this.Hours < 10 ? "0" : "") + this.Hours + r, t += (this.Minutes < 10 ? "0" : "") + this.Minutes + u, t += (this.Seconds < 10 ? "0" : "") + this.Seconds + f, n == "F" && (t += "." + this.Milliseconds), t }; this.toString = this.ToString; this.InitializeClass = function () { t.apply(this, arguments) }; this.InitializeClass.apply(this, arguments) }; System.Type.RegisterClass("System.TimeSpan"); System.TimeSpan.TicksPerMillisecond = 1; System.Array = function () { this.Initialize = function () { }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Array"); System.Array.Reverse = function (n, t, i) { var u, r; for (t = t ? t : 0, i = i ? i : n.length, u = n.slice(t, t + i).reverse(), r = 0; r < i; r++)n[r + t] = u[r] }; System.Array._Copy1 = function (n, t, i) { for (var r = 0; r < i; r++)t[r] = n[r] }; System.Array._Copy2 = function (n, t, i, r, u) { for (var f = 0; f < u; f++)i[r + f] = n[t + f] }; System.Array.Copy = function () { arguments.length == 3 && System.Array._Copy1.apply(this, arguments); arguments.length == 5 && System.Array._Copy2.apply(this, arguments) }; System.Array.FillMultiDimensional = function (n, t, i) { var r, u, f; if (t.length > 0) for (r = 0; r < n.length; r++)u = new Array(t[0]), f = t.slice(1), System.Array.FillMultiDimensional(u, f, i), n[r] = u; else for (r = 0; r < n.length; r++)n[r] = i; return n }; System.Array.GetMultiDimensional = function (n, t) { var i = new Array(n[0]); return System.Array.FillMultiDimensional(i, n.slice(1), t) }; System.Array.Clear = function (n, t, i) { for (var r = 0; r < i; r++)n[r + t] = 0 }; System.Array.SortComparer = function (n, t) { var i = t ? [-1, 1] : [1, -1]; return function (t, r) { return t[n] === r[n] ? 0 : t[n] < r[n] ? i[0] : i[1] } }; System.Array.Sort = function (n, t, i) { i = i == !1 ? !1 : !0; n.sort(System.Array.SortComparer(t, i)) }; System.Buffer = function () { this.Initialize = function () { }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Buffer"); System.Buffer.BlockCopy = function (n, t, i, r, u) { for (var f = 0; f < u; f++)i[r + f] = n[t + f] }; System.Byte = function () { for (var t = [], n = 0; n < arguments.length; n++)t.push(arguments[n]); return System.Array.GetMultiDimensional(t, 0) }; System.Type.RegisterClass("System.Byte"); System.Int32 = function (n) { this.Int = 0; this.DefaultFormat = ""; this.ToString = function (n) { var t = ""; switch (n) { case "B": t = this.Int >= 1048576 ? Math.round(this.Int / 1048576 * 10) / 10 + " MB" : this.Int >= 1024 ? Math.round(this.Int / 1024 * 10) / 10 + " KB" : new String(this.Int); break; case "X2": case "X4": case "X6": case "X8": var i = this.Int.toString(16), r = parseInt(n.substr(1)), u = "00000000".substr(0, r); t = u.substr(0, r - i.length) + i; break; default: t = new String(this.Int) }return t }; this.InitializeClass = function () { this.Int = parseInt(n); this.DefaultFormat = "" }; this.InitializeClass() }; System.Type.RegisterClass("System.Int32"); System.UInt32 = System.Byte; System.Int16 = System.Byte; System.UInt16 = System.Byte; System.DateTime = function (n, t, i, r, u, f, e) { var n = n == null ? 0 : n, t = t == null ? 1 : t, i = i == null ? 1 : i, r = r == null ? 0 : r, u = u == null ? 0 : u, f = f == null ? 0 : f, e = e == null ? 0 : e; return new Date(n, t - 1, i, r, u, f, e) }; System.Type.RegisterClass("System.DateTime"); System.DateTime.Now = function () { return new Date }; System.DateTime.UtcNow = function () { var n = new Date; return new Date(n.getTime() + n.getTimezoneOffset() * 6e4) }; System.DateTime.ToUniversalTime = function () { var n = this; return new Date(n.getTime() + n.getTimezoneOffset() * 6e4) }; System.DateTime._jsZero = 621355968e5; System.DateTime.Expressions = { Default: new RegExp("(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])/([0-9][0-9])"), UtcDate: new RegExp("([0-9][0-9][0-9][0-9])-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"), UtcTime: new RegExp("([01][0-9]|[2][0123]):([012345][0-9]):([012345][0-9])"), UtcMs: new RegExp(".([0-9]+)"), Zone: new RegExp("([+-])([01][0-9]|[2][0123]):([012345][0-9])"), Utc: new RegExp("([0-9][0-9][0-9][0-9])-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[T ]([01][0-9]|[2][0123]):([012345][0-9]):([012345][0-9])") }; System.DateTime.Expression = new RegExp("(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])/([0-9][0-9])"); System.DateTime.ExpressionUtcDate = new RegExp("([0-9][0-9][0-9][0-9])-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])"); System.DateTime.ExpressionUtcTime = new RegExp("([01][0-9]|[2][0123]):([012345][0-9]):([012345][0-9])"); System.DateTime.ExpressionUtcMs = new RegExp(".([0-9]+)"); System.DateTime.ExpressionZone = new RegExp("([+-])([01][0-9]|[2][0123]):([012345][0-9])"); System.DateTime.ExpressionUtc = new RegExp(System.DateTime.ExpressionUtcDate.toString() + "[T ]" + System.DateTime.ExpressionUtcTime.toString()); System.DateTime.Subtract = function (n) { return this.getTime() - n.getTime() + System.DateTime._jsZero }; System.DateTime.Ticks = function () { var n = this; return Date.UTC(n.getFullYear(), n.getMonth(), n.getDate(), n.getHours(), n.getMinutes(), n.getSeconds(), n.getMilliseconds()) + System.DateTime._jsZero }; System.DateTime.SubtractDays = function (n, t) { date = this; var i = new Date(date - new System.TimeSpan(n, 0, 0, 0, 0).Ticks), r = i; return t && (r = new Date(i.getFullYear(), i.getMonth(), i.getDate())), r }; System.DateTime.SubtractMonths = function (n, t) { var i, r, f, u; return date = this, i = date.getFullYear() * 12 + date.getMonth(), i = i - n, r = Math.floor(i / 12), f = i - r * 12, date.setFullYear(r), date.setMonth(f), u = date, t && (u = new Date(date.getFullYear(), date.getMonth(), date.getDate())), u }; System.DateTime.GetFromString = function (n, t) { var i, y, r; date = this; var u = 0, f = 0, e = 0, o = n.match(System.DateTime.ExpressionUtcDate); o && (u = o[0].replace(System.DateTime.ExpressionUtcDate, "$1"), f = o[0].replace(System.DateTime.ExpressionUtcDate, "$2"), e = o[0].replace(System.DateTime.ExpressionUtcDate, "$3")); var s = 0, h = 0, c = 0, l = n.match(System.DateTime.ExpressionUtcTime); l && (s = l[0].replace(System.DateTime.ExpressionUtcTime, "$1"), h = l[0].replace(System.DateTime.ExpressionUtcTime, "$2"), c = l[0].replace(System.DateTime.ExpressionUtcTime, "$3")); i = 0; y = n.match(System.DateTime.ExpressionUtcMs); y && (i = y[0].replace(System.DateTime.ExpressionUtcMs, "$1"), i = parseFloat("0." + i), i = parseInt(i * 1e3)); var a = n.match(System.DateTime.ExpressionZone), v = 0, p = 0, w = 0; return a && (v = parseInt(parseFloat(a[0].replace(System.DateTime.ExpressionZone, "$1") + "1")), p = parseInt(parseFloat(a[0].replace(System.DateTime.ExpressionZone, "$2")) * v), w = parseInt(parseFloat(a[0].replace(System.DateTime.ExpressionZone, "$3")) * v)), t ? (date.setUTCFullYear(u, f - 1, e), date.setUTCHours(s, h, c, i)) : (r = !1, r = r || n.indexOf("GMT") > -1, r = r || n.indexOf("Z") > -1, v != 0 || r ? (date.setUTCFullYear(u, f - 1, e), date.setUTCHours(s, h, c, i), date = new Date(date.getTime() - (p * 60 + w) * 6e4)) : (date.setFullYear(u, f - 1, e), date.setHours(s, h, c, i))), date }; System.DateTime.GetFromUtcString = function (n) { return date = this, date.GetFromString(n, !0), date }; System.DateTime.ToString = function () { }; System.DateTime.ToString = function (n, t) { var i, e, r; switch (arguments.length) { case 0: i = this; t = i.DefaultFormat; break; case 1: i = this; t = arguments[0]; break; case 2: i = arguments[0]; t = arguments[1]; break; default: return "" }i.addZero = function (n) { return n < 10 ? "0" + n : n }; t == null && (t = i.DefaultFormat); t == "Outlook" && (e = new Date, i.getFullYear() == e.getFullYear() && i.getMonth() == e.getMonth() && i.getDate() == e.getDate() ? results = "ddd HH:mm" : t = "yyyy-MM-dd HH:mm"); t == "X" && (t = "yyyy-MM-ddTHH:mm:ss.fffzzz"); var h = i.getMilliseconds(), c = i.getFullYear(), o = new String(i.addZero(c)); o = o.substr(o.length - 2, 2); var v = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"][i.getDay()], y = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thuesday", "Friday", "Saturday"][i.getDay()], p = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"][i.getDay()], w = i.addZero(i.getDate()), b = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"][i.getMonth()], k = i.addZero(i.getMonth() + 1), s = i.getHours() % 12; s == 0 && (s = 12); var d = i.addZero(s), g = i.addZero(i.getHours()), nt = i.addZero(i.getMinutes()), l = i.addZero(i.getSeconds()), tt = i.getHours() < 12 ? "AM" : "PM", f = i.addZero(i.getTimezoneOffset()), u = i.getTimezoneOffset(), a = u < 0; return a && (u = u * -1), f = i.addZero(Math.floor(u / 60)) + ":" + i.addZero(u % 60), f = a || u == 0 ? "+" + f : "-" + f, r = new String(t), r = r.replace("yyyy", c), r = r.replace("yy", o), r = r.replace("www", v), r = r.replace(new RegExp("[d]{4-10}", "g"), y), r = r.replace(new RegExp("[d]{3}", "g"), p), r = r.replace("dd", w), r = r.replace("MMM", b), r = r.replace("MM", k), r = r.replace("ss", l), r = r.replace("hh", d), r = r.replace("HH", g), r = r.replace("mm", nt), r = r.replace("ss", l), r = r.replace("tt", tt), r = r.replace("ffffff", (h + "000000").substr(0, 6)), r = r.replace("fff", (h + "000").substr(0, 3)), r.replace("zzz", f) }; System.DateTime.ToUtcString = function (n) { var t = this.getTime() + this.getTimezoneOffset() * 6e4, i = new Date(t); return i.toString(n) }; System.DateTime.ToDifferenceString = function (n, t) { this.addZero = function (n) { return n < 10 ? "0" + n : n }; t = t ? t : new Date; var f = t.getTime() - n.getTime(), i = new Date(f), r = i.getHours(), u = i.getMinutes(), e = i.getSeconds(), o = 1e3 * (60 * (60 * r + u) + e) + i.getMilliseconds(), s = (i.getTime() - o) / 864e5; return Math.round(s) + "d " + r + "h " + u + "m" }; System.DateTime.GetDayType = function (n, t) { n = n ? n : new Date; var i = ""; return n.getMonth() == 9 && n.getDate() == 31 && (i = "Halloween"), n.getMonth() == 11 && n.getDate() == 31 && (i = "New Year"), t && (i = i.replace(" ", "")), i }; System.DateTime.Separator = "/"; System.DateTime.YearMin = 1900; System.DateTime.YearMax = 2100; System.DateTime.DateFormat = "dd/mm/yyyy"; System.DateTime.Expression = new RegExp("(0[1-9]|1[012])/(0[1-9]|[12][0-9]|3[01])/([0-9][0-9])"); System.DateTime.StripCharsInBag = function (n, t) { for (var r, u = "", i = 0; i < n.length; i++)r = n.charAt(i), t.indexOf(r) == -1 && (u += r); return u }; System.DateTime.DaysInFebruary = function (n) { return n % 4 == 0 && (!(n % 100 == 0) || n % 400 == 0) ? 29 : 28 }; System.DateTime.DaysArray = function (n) { for (var i = [], t = 1; t <= 12; t++)i[t] = 31, (t == 4 || t == 6 || t == 9 || t == 11) && (i[t] = 30); return i[2] = System.DateTime.DaysInFebruary(n), i }; System.DateTime.IsDate = function (n) { var i = new String(n), u; if (results = "", !System.DateTime.Expression.test(i)) return 'Invalid! <span style="color: gray;">Format: mm/dd/yyyy<\/span>'; var r = parseInt(i.replace(System.DateTime.Expression, "$1"), 10), f = parseInt(i.replace(System.DateTime.Expression, "$2"), 10), t = parseInt(i.replace(System.DateTime.Expression, "$3"), 10); return (t >= 0 && t <= 50 && (t += 2e3), t > 50 && t <= 99 && (t += 1900), u = System.DateTime.DaysArray(t)[r], r < 1 || r > 12) ? "Invalid Month" : f > u ? "Invalid Day" : t < System.DateTime.YearMin || t > System.DateTime.YearMax ? "Invalid Year" : results }; Date.prototype.GetFromString = System.DateTime.GetFromString; Date.prototype.GetFromUtcString = System.DateTime.GetFromUtcString; Date.prototype.DefaultFormat = "yyyy-MM-dd HH:mm:ss"; Date.prototype.toString = System.DateTime.ToString; Date.prototype.ToString = System.DateTime.ToString; Date.prototype.toUtcString = System.DateTime.ToUtcString; System.Configuration = System.Configuration ? System.Configuration : {}; System.Type.RegisterNamespace("System.Configuration"); System.Configuration.ConfigurationManager = function () { this.IsServerSide = new Boolean; this.XmlConfig = null; this.ObjConfig = null; this.FilePath = ""; this.ReadConfig = function () { var n = !1; if (this.IsServerSide) { this.FilePath = Request.ServerVariables("APPL_PHYSICAL_PATH") + "Web.config"; try { this.ObjConfig = Server.CreateObject("PinnacleSports.ActiveX.Charset"); n = !0 } catch (t) { this.XmlConfig = new ActiveXObject("Msxml2.DOMDocument"); this.XmlConfig.async = !1; this.XmlConfig.load(this.FilePath); this.XmlConfig.parseError.errorCode != 0 ? Trace.Write("Error: " + this.XmlConfig.parseError.errorCode + ": " + this.XmlConfig.parseError.reason) : n = !0 } } return n }; this.ConnectionStrings = function (n) { var t = "", f = this.ReadConfig(), u, r, i; if (f) if (this.ObjConfig) t = "Provider=MSDASQL; Driver={SQL Server};" + this.ObjConfig.GetConnectionStrings(this.FilePath, n); else for (u = "/configuration/connectionStrings/add[@name='" + n + "']", r = this.XmlConfig.selectNodes(u), i = 0; i < r.length; i++)t = "Provider=MSDASQL; Driver={SQL Server};" + r[i].attributes.getNamedItem("connectionString").text; return t = t.replace("Data Source", "SERVER"), t = t.replace("Initial Catalog", "DATABASE"), t = t.replace("User ID", "UID"), t.replace("Password", "PWD") }; this.AppSettings = function (n) { var i = "", f = this.ReadConfig(), u, r, t; if (f) if (this.ObjConfig) i = this.ObjConfig.GetAppSettings(this.FilePath, n); else for (u = "/configuration/appSettings/add[@key='" + n + "']", r = this.XmlConfig.selectNodes(u), t = 0; t < r.length; t++)i = r[t].attributes.getNamedItem("value").text; return i }; this.InitializeClass = function () { this.IsServerSide = !1; typeof Response == "object" && (this.IsServerSide = !0); this.IsServerSide }; this.InitializeClass() }; System.Type.RegisterClass("System.Configuration.ConfigurationManager"); System.ConfigurationManager = new System.Configuration.ConfigurationManager; System.Web = System.Web ? System.Web : {}; System.Type.RegisterNamespace("System.Web"); System.Web.UI = System.Web.UI ? System.Web.UI : {}; System.Type.RegisterNamespace("System.Web.UI"); System.Web.UI.Console = function () { function o() { this.LogStyle.onevent = { F: "'([oO]n)([a-zA-Z]+)'", R: "<span style=\"color: #800000;\">'$1$2'<\/span>", O: "g" }; this.LogStyle.on = { F: "^(on )(.*)", R: '<span style="color: #808080;">on <\/span>$2', O: "i" }; this.LogStyle["true"] = { F: "(true)", R: '<span style="color: #0000E0;">$1<\/span>', O: "ig" }; this.LogStyle["false"] = { F: "(false)", R: '<span style="color: #0000E0;">$1<\/span>', O: "ig" }; this.LogStyle.set = { F: "^(set )(.*)", R: '<span style="color: #707000;">set <\/span>$2', O: "i" }; this.LogStyle.get = { F: "^(get )(.*)", R: '<span style="color: #707000;">get <\/span>$2', O: "i" }; this.LogStyle.call = { F: "^(call )(.*)", R: '<span style="color: #0000FF;">call<\/span> $2', O: "i" }; this.LogStyle.warning = { F: "^(warning)(.*)", R: '<span style="color: #b8860b;">Warning<\/span>$2', O: "i" }; this.LogStyle.error = { F: "^(error)(.*)", R: '<span style="color: #ff0000;">Error<\/span>$2', O: "i" }; this.LogStyle.exec = { F: "^(exec)(.*)", R: '<span style="color: #cc0099;">exec<\/span>$2', O: "i" }; this.LogStyle.info = { F: "^(info.*)", R: '<span style="color: #c0c000;">$1<\/span>', O: "i" }; this.LogStyle.comment1 = { F: "([^:])//(.*)$", R: '$1<span style="color: #008000">//$2<\/span>', O: "g" }; this.LogStyle.comment2 = { F: "^//(.*)$", R: '<span style="color: #008000">//$1<\/span>', O: "g" }; this.LogStyle2.date = { F: "#date#", R: n.returnDate, O: "i" }; this.LogStyle2.ident = { F: "#ident#", R: n.returnIdent, O: "i" }; for (var t in this.LogStyle) this.LogStyle[t].Fx = new RegExp(this.LogStyle[t].F, this.LogStyle[t].O); for (t in this.LogStyle2) this.LogStyle2[t].Fx = new RegExp(this.LogStyle2[t].F, this.LogStyle2[t].O) } function s(n, t) { if (t.EventName == "OnKeyDown") switch (t.KeyName) { }return null } function h(t, i) { var r, u, f; t.Parent.Write("guest$ " + i.Command); r = i.Command.toLowerCase(); switch (r) { case "/console cls": n.Clear(); break; case "/console help": t.Parent.Write("CLS - Clears the screen."); break; default: r.indexOf("/console kbd ") > -1 ? (u = i.Command.substr(13), n.ChangeLayout(u)) : r.indexOf("/console style ") > -1 ? (f = i.Command.substr(15), n.SetStyle(f)) : (t.Parent.Write("'" + i.Command + "' is not recognized as an internal or external command,"), t.Parent.Write("operable program or batch file.")) } } function i() { n.OnLoad() } function u(n) { var i = this.FrameNode.contentWindow.document.createElement("div"), t, r; if (i.styleText = this.StyleMessage, i.innerHTML = n, t = f.apply(this), r = t.scrollHeight - t.scrollTop - t.clientHeight, this.LogDiv.appendChild(i), this.AutoScroll) try { r <= 0 && this.ScrollDown(!0) } catch (u) { } } function f() { var n = this.FrameNode.contentWindow.document.documentElement; return n || (n = this.FrameNode.contentWindow.document.body), n } function c() { var u = this.Context.getElementsByTagName("body").length > 0, n, i, r, t; u && (n = this.Context.getElementById("TraceLog"), n && (i = this.Context.getElementById("SystemTraceLogFrame"), i || (this.Id = "SystemTraceLog", this.CreateInterface(), r = n.parentNode, t = this.Context.createElement("div"), t.id = "TraceLog", t.style.cssText = n.style.cssText, t.appendChild(this.Node), r.replaceChild(t, n)))) } var n, e, t, r; this.IsEnabled = new Boolean; this.IsServerSide = new Boolean; this.IsInterfaceReady = !1; this.CurrentLevel = 0; this.Node; this.TableNode; this.FrameNode; this.FrameNodeUrl; this.ControlNode; this.LogBody = null; this.LogDoc = null; this.LogDiv = null; this.UncommittedNodes = []; this.CssPrefix = "SWUI_Console"; this.Id; this.IdentSize = unescape("%A0%A0%A0%A0"); this.CurrentIdent = ""; this.LogStyle = {}; this.LogStyle2 = {}; this.TimeStamp = "yyyy-MM-dd HH:mm:ss"; this.Context = null; this.Style = ""; this.AutoScroll = !0; this.CmdLine; this.TraceLevelSwitch = 4; n = this; e = 0; this.SetStyle = function (t) { var u, r, i, e; if (this.Style = this.Style == "Matrix" && typeof t == "undefined" ? "Matrix" : new String(t), this.returnIdent = function () { return n.CurrentIdent }, this.returnDate = function () { return '<span style="color: #A0A0A0;">' + (new Date).toString(n.TimeStamp) + ": <\/span>" }, this.Font = "", o.call(this), this.LogDoc && this.LogDoc.styleSheets.length == 0) for (u = 0; u < this.Context.styleSheets.length; u++) { var s = this.Context.styleSheets.item(u), h = new RegExp("System.Web.UI.Interface(.debug)?.css", "gi"), f = s.href; if (f.match(h)) { this.LogDoc.createStyleSheet ? this.LogDoc.createStyleSheet(f) : (r = this.LogDoc.createElement("link"), r.href = f, r.rel = "stylesheet", r.type = "text/css", this.LogDoc.getElementsByTagName("head")[0].appendChild(r)); break } } this.TimeStamp = this.Style == "Matrix" ? "dd:HH:mm:ss" : "yyyy-MM-dd HH:mm:ss"; i = this.CssPrefix + (t ? "_" + t : ""); this.StyleMessage = "white-space: nowrap; text-align: left;"; this.Node && (this.Node.className = i, this.TableNode.className = i + "_Table", this.TableNode.tBodies[0].className = i + "_Table_TBody", this.TableNode.tBodies[0].rows[0].className = i + "_Table_TBody_Row1", this.TableNode.tBodies[0].rows[1].className = i + "_Table_TBody_Row2", this.FrameNode.className = i + "_Frame", this.BarDiv.className = i + "_CommandLine", this.LogBody.className = i + "_LogBody", this.LogDiv.className = i + "_LogDiv", e = this.TableNode.offsetHeight, this.TableNode.tBodies[0].rows[0].childNodes[0].style.height = e - this.BarDiv.offsetHeight + "px", this.TableNode.tBodies[0].rows[1].childNodes[0].style.height = this.BarDiv.offsetHeight + "px"); this.IsServerSide && (this.StyleMessage += "font-size: 8pt; font-family: Verdana;") }; this.LevelUpdate = function (t) { t == null || (t == 0 ? this.CurrentLevel = 0 : (t > 1 && (t = 1), t < -1 && (t = -1), this.CurrentLevel = this.CurrentLevel + t)); n.CurrentIdent = ""; for (var i = 0; i < this.CurrentLevel; i++)n.CurrentIdent += this.IdentSize }; this.ChangeLayout = function (n) { System.Type.Class.Exists("System.Web.UI.ShortKeys.KeysManager") && (t && t.Dispose(), t = new System.Web.UI.ShortKeys.KeysManager("LayoutControl", this.CmdLine.LineNode), n != "" && System.Type.Class.Exists("System.Globalization.KeyboardLayouts.Layout") && (t.KeyboardLayout = new System.Globalization.KeyboardLayouts.Layout(n)), t.PreventKeys(["CTRL+T", "CTRL+S"]), t.AllowKeys(["CTRL+S"]), t.OnShortCutAction = s) }; this.CreateControls = function () { if (this.BarDiv = this.Context.createElement("div"), this.TableNode.tBodies[0].rows[1].childNodes[0].appendChild(this.BarDiv), System.Type.Class.Exists("System.Web.UI.HtmlControls.TextBox.CommandLine")) { var t = this.Context.createElement("input"); t.id = this.Id + "CommandLine"; this.BarDiv.appendChild(t); this.CmdLine = new System.Web.UI.HtmlControls.TextBox.CommandLine(t, this.Context); this.CmdLine.Parent = this; this.CmdLine.Command = h } else this.CmdLine = this.Context.createElement("div"), this.CmdLine.innerHTML = "[Clear]", this.CmdLine.style.cursor = "pointer", this.CmdLine.onclick = function () { n.Clear() }, this.BarDiv.appendChild(this.CmdLine) }; this.Clear = function () { this.LogDiv.innerHTML = "" }; this.CreateInterface = function () { var t; if (!this.FrameNode && (this.Node = this.Context.getElementById(this.Id), t = this.Context.getElementsByTagName("body").length > 0, t && !this.Node)) { this.Node = this.Context.createElement("div"); this.Node.id = this.Id; this.TableNode = this.Context.createElement("table"); var n = this.Context.createElement("tbody"), r = this.Context.createElement("tr"), u = this.Context.createElement("td"), f = this.Context.createElement("tr"), e = this.Context.createElement("td"); this.Node.appendChild(this.TableNode); this.TableNode.appendChild(n); n.appendChild(r); n.appendChild(f); r.appendChild(u); f.appendChild(e); this.FrameNode = this.Context.createElement("iframe"); this.FrameNode.id = this.Id + "Frame"; this.FrameNode.frameborder = 0; this.FrameNode.style.visibility = "hidden"; this.FrameNode.src = "about:blank"; typeof this.Context.onreadystatechange != "undefined" ? typeof this.FrameNode.addEventListener == "function" ? this.FrameNode.addEventListener("load", i, !0) : this.FrameNode.attachEvent("onreadystatechange", i) : this.FrameNode.addEventListener("load", i, !0); u.appendChild(this.FrameNode) } }; r = !1; this.OnLoad = function () { var n = ""; n = this.FrameNode.readyState; n == "complete" && (n = "onload"); typeof n == "undefined" && (n = "onload"); n == "onload" && (r ? (this.FrameNode.removeEventListener ? this.FrameNode.removeEventListener("load", i, !0) : this.FrameNode.detachEvent && this.FrameNode.detachEvent("onreadystatechange", i), this.CreateInterfaceStep2()) : (r = !0, this.FrameNodeUrl || (this.FrameNode.src = System.GetScriptsPath() + "Examples/System.Web.UI.ConsoleFrame.htm"))) }; this.CreateInterfaceStep2 = function () { this.FrameNode.style.visibility = "visible"; this.LogDoc = this.FrameNode.contentWindow.document; var i = this.LogDoc.documentElement.getElementsByTagName("html"), t = this.LogDoc.documentElement.getElementsByTagName("body"), n = null; t.length > 0 ? n = t[0] : (n = this.LogDoc.createElement("body"), html.appendChild(n)); this.LogBody = n; this.LogBody.innerHTML = '<table style="width: 100%" cellspacing="0" cellpadding="0"><tr><td valign="bottom" id="' + this.Id + 'Cell"><\/td><\/tr><\/table>'; this.LogDiv = this.LogDoc.createElement("div"); this.LogDoc.getElementById(this.Id + "Cell").appendChild(this.LogDiv); this.CreateControls(); this.ChangeLayout("Lithuanian (UK)"); this.SetStyle(); this.IsInterfaceReady = !0; this.Write("Info: --- Document Body Initialized ---") }; this.GetHtml = function (n, t, i) { var r, u, f, e, o; (t == 2 || t == -2) && this.LevelUpdate(t); r = new String(n); for (u in this.LogStyle) f = this.LogStyle[u].Fx, e = this.LogStyle[u].R, r = r.replace(f, e); o = "#date##ident#"; for (u in this.LogStyle2) f = this.LogStyle2[u].Fx, e = this.LogStyle2[u].R, o = o.replace(f, e); return i != !1 && (r = o + r), (t == 1 || t == -1) && this.LevelUpdate(t), r }; this.TraceError = function (n) { this.TraceLevelSwitch > 0 && this.Write(n) }; this.TraceWarning = function (n) { this.TraceLevelSwitch > 1 && this.Write(n) }; this.TraceInformation = function (n) { this.TraceLevelSwitch > 2 && this.Write(n) }; this.Write = function (n, t, i, r) { var f, e; if (this.TraceLevelSwitch > 3) { if (f = "", this.IsEnabled || i == !0) if (f = this.GetHtml(n, t, r), this.IsServerSide) f = '<div style="' + this.StyleMessage + '">' + f + "<\/div>\r\n", Response.Write(f), Response.Buffer == !0 && Response.Flush(); else if (this.Id == "TraceLog" && c.call(this), this.IsInterfaceReady) { if (this.UncommittedNodes.length > 0) { for (e = 0; e < this.UncommittedNodes.length; e++)u.call(this, this.UncommittedNodes[e]); this.UncommittedNodes = [] } u.call(this, f) } else this.UncommittedNodes.push(f); return f } }; this.ScrollDown = function (n) { if (this.LogBody) if (n) this.FrameNode.contentWindow.scrollBy(0, this.LogBody.scrollHeight - this.LogBody.scrollTop); else { var t = f.apply(this), i = t.scrollHeight - t.scrollTop - t.clientHeight; i <= 0 && this.FrameNode.contentWindow.scrollBy(0, this.LogBody.scrollHeight - this.LogBody.scrollTop) } }; this.WriteError = function (n, t) { this.Write("error: " + n, t, !0) }; this.WriteRecordSet = function (n, t) { var i, u, o, r, f, e; if (this.IsEnabled == !0 || t == !0) { if (this.Write("Route thru Records...", 1), i = 0, u = 0, n.Fields != null && (i = n.Fields.Count, i > 0 && (o = new Array(n.GetRows), u = o.length), this.Write("// RecordSet[" + i + "," + u + "]"), n.MoveFirst()), u > 0) for (r = 0; r < i; r++)f = new String(n(r).Name), e = n(r).Value, f.indexOf("password") > -1 && (e = "&lt;********&gt;"), this.Write(f + " = '" + e + "'"); this.Write("...End", -2) } }; this.InitializeInterface = function () { }; this.InitializeEvents = function () { }; this.Dispose = function () { this.Node && (this.Table.tBodies[0].rows[0].childNodes[0].removeChild(this.FrameNode), this.Node.removeChild(this.TableNode)) }; this.Initialize = function () { if (this.IsEnabled = !1, this.Id = arguments[0], this.IsServerSide = typeof Response == "object", !this.IsServerSide) { var n = arguments[1]; this.Context = n ? n : document } this.SetStyle() }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Web.UI.Console"); Trace = new System.Web.UI.Console("TraceLog"); System.Web.Events = System.Web.Events ? System.Web.Events : {}; System.Web.Events.Add = function (n, t, i, r) { var u = i + "." + r, e = u + " = function(e){ var e = e ? e : window.event; var sender = e.target ? e.target : e.srcElement; " + i + ".OnEvent(sender,e); }", f = ""; return f = this.attachEvent ? 'document.getElementById("' + n + '").attachEvent("on' + t + '", ' + u + ");" : 'document.getElementById("' + n + '").addEventListener("' + t + '", ' + u + ",true);", Trace.Write(this.GetType().Name + "(" + n + ", " + t + ", " + i + ", " + r + ");", 1), Trace.Write("// " + e), Trace.Write("// " + f), Trace.Write("// return " + u), Trace.Write("}", -2), eval(e), eval(f), u }; System.Web.Events.Remove = function (n, t, i, r) { var f = i + "." + r, u = ""; u = this.detachEvent ? 'document.getElementById("' + n + '").detachEvent("on' + t + '", ' + f + ");" : 'document.getElementById("' + n + '").removeEventListener("' + t + '", ' + f + ",true);"; Trace.Write(this.GetType().Name + "(" + n + ", " + t + ", " + i + ", " + r + ");", 1); Trace.Write("// " + u); Trace.Write("}", -2); eval(u) }; System.Web.HttpRequest = function () { this.HttpRequest = {}; this.QueryUrl = ""; this.QueryData = ""; this.States = ["Uninitialized", "Loading...", "Loaded", "Interactive", "Complete"]; this.IsWebService; this.UniqueId = ""; this.DownloadSize = 0; this.DownloadSizeLastP = 0; this.DownloadTotal = 0; this.DownloadTimeBegin = new Date; this.DownlaodTimeEnd = new Date; this.Busy = !1; this.IsServerSide = typeof Response == "object"; var n = this; this.OnDataReady = function () { Trace.Write("results") }; this.OnDataError; this.Send = function (n, t) { this.QueryUrl = new String(n); this.QueryData = new String(t); typeof this.IsWebService == "undefined" && (this.IsWebService = this.QueryUrl.indexOf("asmx") > -1); Trace.Write(this.UniqueId + ": Send: [" + this.QueryData.length + " bytes] // IsWebService = " + this.IsWebService + "; QueryUrl=" + n + "?" + t); this.HttpRequest.onreadystatechange = this.OnReadyStateChange; window.ActiveXObject || (this.HttpRequest.onprogress = this.OnProgress); this.IsWebService ? (this.HttpRequest.open("GET", this.QueryUrl + "?" + this.QueryData, !0), this.HttpRequest.setRequestHeader("Connection", "close"), this.HttpRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), this.HttpRequest.setRequestHeader("Accept-Ranges", "bytes"), this.HttpRequest.setRequestHeader("POSTDATA", this.QueryData)) : (this.HttpRequest.open("GET", this.QueryUrl + "?" + this.QueryData, !0), this.HttpRequest.setRequestHeader("Connection", "close"), this.HttpRequest.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), this.HttpRequest.setRequestHeader("Content-Length", this.QueryData.length), this.HttpRequest.setRequestHeader("POSTDATA", this.QueryData)); window.ActiveXObject ? this.HttpRequest.send(this.QueryData) : this.HttpRequest.send(this.QueryData) }; this.OnReadyState = function () { }; this.OnProgress = function () { var i = "on " + n.UniqueId + '<span style="color: gray;">.OnProgress:<\/span> ', r = n.StateToString() + "[" + n.HttpRequest.readyState + "]", t; (n.HttpRequest.readyState == 3 || n.HttpRequest.readyState == 4) && (n.Busy || (n.Busy = !0, window.ActiveXObject ? (n.DownloadSize = -1, n.DownloadTotal = -1) : (n.DownloadSize = n.HttpRequest.responseText.length, n.DownloadTotal = n.HttpRequest.getResponseHeader("Content-Length")), n.HttpRequest.readyState == 4 && (n.DownloadSize = n.DownloadTotal), t = new System.EventArgs("onstatechange"), t.Size = n.DownloadSize, t.Total = n.DownloadTotal, n.OnReadyState && n.OnReadyState(n, t), Trace.Write(i + r + ": Bytes Retrieved: " + n.DownloadSize + " / " + n.DownloadTotal), n.Busy = !1)) }; this.OnReadyStateChange = function () { var t = "on " + n.UniqueId + '<span style="color: gray;">.OnReadyStateChange:<\/span> ', l = n.StateToString() + "[" + n.HttpRequest.readyState + "]", h, i, f, r, e, u, o, s, c; if ((n.HttpRequest.readyState < 3 || n.HttpRequest.readyState == 4) && typeof Trace == "object" && Trace.Write(t + "; state='" + l + "'"), n.HttpRequest.readyState == 1 && (n.TimeBegin = new Date), n.HttpRequest.readyState == 2, n.HttpRequest.readyState == 3, n.HttpRequest.readyState == 4) { n.TimeEnd = new Date; h = n.TimeEnd.getTime() - n.TimeBegin.getTime(); i = new Date(h); Trace.Write(t + "Download Time: " + i.getMinutes() + ":" + i.getMinutes() + ":" + i.getSeconds() + "." + i.getMilliseconds()); n.OnProgress(); f = n.DownloadSize + " Bytes"; n.DownloadSize >= 1e3 && (f = Math.round(n.DownloadSize / 1024) + " KB"); Trace.Write(t + "Downloaded: " + f); r = -1; try { r = n.HttpRequest.status } catch (a) { } if (Trace.Write(t + "Request Status: " + r), e = !1, r == 200) { if (Trace.Write(t + "Returning Results"), n.IsWebService) if (u = n.HttpRequest.responseXML, typeof u == "undefined") Trace.Write("Error: " + n.UniqueId + " data has no properties!"), e = !0; else try { u.setProperty("SelectionLanguage", "XPath") } catch (a) { Trace.Write('Error: data.setProperty("SelectionLanguage", "XPath") because ' + a.message) } else u = n.HttpRequest.responseText; e || n.OnDataReady(n, u) } else { o = ""; s = ""; try { o = n.HttpRequest.responseText; s = n.HttpRequest.statusText } catch (a) { } Trace.Write(t + "There was a problem retrieving the XML data: " + r + " - " + s + " - " + n.QueryUrl + ": " + o); c = new System.EventArgs("OnDataError"); n.OnDataError && n.OnDataError(n, c) } } }; this.Reload = function () { return Trace.Write("Reload: " + this.QueryUrl + "?" + this.QueryData), n.Send(this.QueryUrl, this.QueryData) }; this.StateToString = function () { return this.States[this.HttpRequest.readyState] }; this.PatamatersToQuery = function () { var n = "", t; if (this.Parameters) for (t in this.Parameters) n.length > 0 && (n += "&"), n += t + "=" + escape(this.Parameters[t]); return n }; this.InitializeClass = function () { this.HttpRequest = new System.Xml.XmlRequest; var n = new String(Math.random()); this.UniqueId = "WebService-" + n.substring(2) }; this.InitializeClass() }; System.Type.RegisterClass("System.Web.HttpRequest"); typeof Response != "object" && (window.ActiveXObject || (document.implementation && document.implementation.hasFeature("XPath", "3.0") && (XMLDocument.prototype.selectNodes = function (n, t) { var i; t || (t = this); var f = this.createNSResolver(this.documentElement), r = this.evaluate(n, t, f, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null), u = []; for (i = 0; i < r.snapshotLength; i++)u[i] = r.snapshotItem(i); return u }, Element.prototype.selectNodes = function (n) { if (this.ownerDocument.selectNodes) return this.ownerDocument.selectNodes(n, this); throw "For XML Elements Only"; }, XMLDocument.prototype.selectSingleNode = function (n, t) { t || (t = this); var i = this.selectNodes(n, t); return i.length > 0 ? i[0] : null }, Element.prototype.selectSingleNode = function (n) { if (this.ownerDocument.selectSingleNode) return this.ownerDocument.selectSingleNode(n, this); throw "For XML Elements Only"; }), typeof XMLDocument != "undefined" && typeof XMLDocument.setProperty == "undefined" && (XMLDocument.prototype.setProperty = function (n, t) { var r, i, u; if (n == "SelectionNamespaces") { for (namespaces = {}, r = t.split(" xmlns:"), i = 1; i < r.length; i++)u = r[i].split("="), namespaces[u[0]] = u[1].replace(/\"/g, ""); this._ns = { lookupNamespaceURI: function (n) { return namespaces[n] } } } }, XMLDocument.prototype._ns = { lookupNamespaceURI: function () { return null } }))); System.Timers = System.Timers ? System.Timers : {}; System.Timers.Timer = function (n, t, i) { var r = this; this.Interval = 0; this.TimerId; this.RunAtStart; this.StartDate; this.StopDate; this.State = "stopped"; this.customAction; this.AutoReset = !1; this.RunOnce = !1; this.OnStop; this.OnStart; this.OnResume; this.OnElapsed; this.OnEvent = function () { }; this._action = function () { var n, t; r.TimerId == -1 ? Trace.Write("Warning: Can't do " + this.id + "[id=" + r.TimerId + "]._action(). Timer is stopped.") : (Trace.Write(r.id + "._action() // TimerId = " + r.TimerId), r.StopDate = new Date, window.clearInterval(r.TimerId), r.TimerId = -1, r.State = "stopped", t = new System.EventArgs("OnAction"), r.OnEvent(r, t), r.OnElapsed && r.OnElapsed(r, t), r.Action != null && (n = r.Action(r, t))); n = n == !0 || n == !1 ? n : r.AutoReset; n == !0 && (r.AutoReset = !1, Trace.Write("// " + r.id + ".AutoReset == true // AutoReset timer..."), r.Resume(!0)) }; this.ResetAndExecute = function () { r.Reset(!0) }; this.Reset = function (n) { r.Stop(); r.RunAtStart = n == !0; r.Start(!0) }; this.Start = function (n) { if (r.AutoReset = n != !1, r.TimerId == -1) { Trace.Write(this.id + ".Start(" + r.AutoReset + ") // TimerId = " + r.TimerId); r.State = "running"; r.StartDate = new Date; r.RunAtStart == !0 ? (r.RunAtStart = !1, r.TimerId = window.setTimeout(r._action, 0)) : r.TimerId = window.setTimeout(r._action, r.Interval); var t = new System.EventArgs("OnStart"); r.OnEvent(r, t); r.OnStart && r.OnStart(r, t) } else Trace.Write("Warning: Can't " + this.id + "[id=" + r.TimerId + "].Start(). Timer is running.") }; this.Resume = function (n) { var u; if (r.AutoReset = n != !1, r.TimerId == -1) { r.State = "running"; var f = new Date, i = f.getTime() - r.StopDate.getTime(), t = r.Interval - i; Trace.Write(this.id + ".Resume(" + r.AutoReset + ") // Time passed from: LastStop = " + i + "; Difference with iterval = " + t); t < 0 && (t = 0); r.StartDate = new Date; r.RunAtStart == !0 ? (r.RunAtStart = !1, r.TimerId = window.setTimeout(r._action, 0)) : r.TimerId = window.setTimeout(r._action, t); u = new System.EventArgs("OnResume"); r.OnEvent(r, u) } else Trace.Write("Warning: Can't " + this.id + "[id=" + r.TimerId + "].Resume(). Timer is already running.") }; this.Stop = function () { if (r.TimerId == -1) Trace.Write("Warning: Can't " + this.id + "[id=" + r.TimerId + "].Stop(). Timer is already stopped."); else { Trace.Write(this.id + ".Stop() // TimerId = " + r.TimerId); r.StopDate = new Date; window.clearTimeout(r.TimerId); r.TimerId = -1; r.State = "stopped"; var n = new System.EventArgs("OnStoped"); r.OnEvent(r, n); r.OnStop && r.OnStop(r, n) } }; this.Initialize = function () { this.id = n ? n : this.GetType().Name; this.TimerId = -1; this.RunAtStart = !1; this.Interval = t ? parseInt(t) : 4e3; r.AutoReset = i != !1 }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Timers.Timer"); System.Timers.ProgressTimer = function (n, t, i, r) { this.TimerId; this.Interval; var u = this; this.Task; this.Done; this.Args; this.Context; this.Tick = function () { this.Done ? (window.clearInterval(this.TimerId), this.TimerId = -1) : (this.Task.apply(this, this.Args), this.Done = !0) }; this.Execute = function () { this.Args = arguments; this.Done = !1; this.TimerId == -1 && (this.TimerId = setInterval(function () { u.Tick() }, this.Interval)) }; this.InitializeClass = function () { this.id = n ? n : this.GetType().Name; this.Task = t; this.TimerId = -1; this.Context = r ? r : this; this.Done = !0; this.Interval = i ? parseInt(i) : 200 }; this.InitializeClass() }; System.Type.RegisterClass("System.Timers.ProgressTimer"); System.Timers.Synchronizer = function (n, t) { this.OnResults; this.QueryUrl = ""; this.QueryData = ""; this.Browser; this.TimeServerUrl = "http://132.163.4.101:14/index.cgi"; this.ServiceUrl = ""; this.QueryUrl = ""; this.TestType = ""; this.TimeArray = []; this.TestTimes = 10; this.TestStart = function () { if (this.TimeArray.length == this.TestTimes) i.Results(); else { var n = {}; n.LocalTimeStart = new Date; this.TimeArray.push(n); Trace.Write("exec " + this.id + ".TestServer() // Request No." + this.TimeArray.length); this.Browser.UniqueId = this.id + ".Browser"; this.QueryData = ""; this.Browser.OnDataReady = this.OnDataReady; this.Browser.Send(this.QueryUrl, this.QueryData) } }; this.Test = function (n) { this.TestType = n; switch (n) { case "Server": this.QueryUrl = this.ServiceUrl + "/GetServerUtcTime"; break; case "Database": this.QueryUrl = this.ServiceUrl + "/GetDatabaseUtcTime"; break; case "Remote": this.QueryUrl = this.ServiceUrl + "/GetRemoteUtcTime"; break; default: this.QueryUrl = this.ServiceUrl + "/GetServerUtcTime" }this.TimeArray = []; this.TestStart() }; this.Results = function () { var t, i, r, f, u, e, n; for (Trace.Write(this.id + ".Results()"), t = 1e4, i = -1, r = 0; r < this.TimeArray.length; r++)f = this.TimeArray[r], u = f.LocalTimeEnd.getTime() - f.LocalTimeStart.getTime(), u < t && (t = u, i = r), Trace.Write("Delay Time " + r + ": " + u); if (Trace.Write("Best Time " + i + ": " + t), i == -1) Trace.Write("Error: Server reply is slower than 10 seconds!!!"); else { var h = this.TimeArray[i].LocalTimeStart.getTime() + t / 2, o = new Date(h), s = this.TimeArray[i].ServerUtcTime; Trace.Write("// Local Time: " + o.toString("yyyy-MM-dd HH:mm:ss.fff") + " - Server Time: " + s.toString("yyyy-MM-dd HH:mm:ss.fff")); e = o.getTime() - s.getTime(); Trace.Write(this.TestType + " Time Difference: " + e / 1e3 + " seconds"); n = new System.EventArgs("OnTimeSyncResults"); n.Difference = e / 1e3; n.Bias = t / 1e3; n.Distance = n.Difference < 0 ? n.Difference * -1 : n.Difference; n.Sign = n.Difference < 0 ? "-" : "+"; n.TestType = this.TestType; n.Message = "Time Difference between your PC and " + this.TestType + " is: " + n.Difference + " sec. [Bias: Â±" + n.Bias + " sec]"; this.OnResults && this.OnResults(this, n) } }; this.OnDataReady = function (n, t) { Trace.Write("on " + i.id + ".OnDataReady(sender,data)"); var r = "child::*[name()='dateTime']/text()", f = t.selectSingleNode(r).nodeValue, u = System.Xml.Node.parseDateTime(t.selectSingleNode(r)); i.TimeArray[i.TimeArray.length - 1].ServerUtcTime = u; i.TimeArray[i.TimeArray.length - 1].LocalTimeEnd = new Date; Trace.Write("Server Local Time: " + f); Trace.Write("Server Local Time: " + u.toString("yyyy-MM-dd HH:mm:ss.fff")); i.TestStart() }; var i = this; this.InitializeClass = function () { this.id = n ? n : this.GetType().Name; this.ServiceUrl = t ? t : "/WebServices/Time.asmx"; this.Browser = new System.Web.HttpRequest }; this.InitializeClass() }; System.Type.RegisterClass("System.Timers.Synchronizer"); System.Clipboard = function () { }; System.Type.RegisterClass("System.Clipboard"); System.Clipboard.Copy = function (n) { var e = !1, r, i, t, u, f; if (window.clipboardData) window.clipboardData.setData("Text", n), e = !0; else if (window.netscape) try { if ((netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect"), r = "Text to copy", i = Components.classes["@mozilla.org/supports-string;1"].createInstance(Components.interfaces.nsISupportsString), !i) || (i.data = r, t = Components.classes["@mozilla.org/widget/transferable;1"].createInstance(Components.interfaces.nsITransferable), !t) || (t.addDataFlavor("text/unicode"), t.setTransferData("text/unicode", i, r.length * 2), u = Components.interfaces.nsIClipboard, f = Components.classes["@mozilla.org/widget/clipboard;1"].getService(u), !f)) return !1; f.setData(t, null, u.kGlobalClipboard) } catch (o) { System.Clipboard.FlashCopy(n) } return e }; System.Clipboard.FlashCopy = function (n) { var t = "FlashCopier", i, r, u; document.getElementById(t) || (i = document.createElement("div"), i.id = t, document.body.appendChild(i)); r = System.GetScriptsPath() + "/Adobe.Flash.Clipboard.swf"; document.getElementById(t).innerHTML = ""; u = '<embed src="' + r + '" FlashVars="clipboard=' + encodeURIComponent(n) + '" width="0" height="0" type="application/x-shockwave-flash"><\/embed>'; document.getElementById(t).innerHTML = u }; System.Clipboard.Paste = function () { var n = !1; window.clipboardData ? (window.clipboardData.getData("Text"), n = !0) : window.netscape }; System.Matrix = {}; System.Matrix.Current = null; System.Matrix.Ask = function () { document.getElementById("TheMatrixDiv").style.display = ""; System.Matrix.Current != null && System.Matrix.Current.Stop(); System.Matrix.Current = new System.Matrix.Type("\nYou take the blue pill and the story ends.\r\nYou wake in your bed and believe whatever you want to believe.\r\nYou take the red pill and you stay in Wonderland...\r\n...and I show you how deep the rabbit-hole goes.\r\nRemember - all I am offering is the truth, nothing more.\r\nWelcome to The Matrix!... "); System.Matrix.Current.Start() }; System.Matrix.Leave = function () { System.Matrix.Current != null && System.Matrix.Current.Stop(); document.getElementById("TheMatrixDiv").style.display = "none"; Trace.IsEnabled = !1; CrmInt.ShowHideTrace(!1); Trace.SetStyle("default") }; System.Matrix.Enter = function () { var n = document.getElementById("TheMatrixDiv"); n && (n.style.display = "none"); Trace.SetStyle("Matrix"); CrmInt && CrmInt.ShowHideTrace(!0); Trace.IsEnabled = !0 }; System.Matrix.Type = function (n) { var t = this; t.pos = -1; t.message = n; t.TextNode = document.createElement("span"); t.TextNode.style.color = "#00A000"; t.CursorNode = document.createElement("span"); t.CursorNode.appendChild(document.createTextNode("")); t.CursorNode.style.color = "#20ff20"; document.getElementById("TheMatrixConsole").appendChild(t.TextNode); document.getElementById("TheMatrixConsole").appendChild(t.CursorNode); t.TimerId; this.Start = function () { var r, n, i; t.pos++; r = t.CursorNode.firstChild; t.TextNode.appendChild(r); n = t.message.charAt(t.pos); node = document.createTextNode(n); n == "\n" && t.TextNode.appendChild(document.createTextNode("Morpheus:> ")); n == "\r" && (node = document.createElement("br")); t.CursorNode.appendChild(node); t.pos < t.message.length ? (i = 100, n == "\r" && (i = 1e3), n == " " && (i = 0), t.TimerId = window.setTimeout(t.Start, i)) : t.CursorNode.style.textDecoration = "blink" }; this.Stop = function () { window.clearTimeout(t.TimerId); t.TextNode.innerHTML = ""; t.CursorNode.innerHTML = ""; t.CursorNode.appendChild(document.createTextNode("")); t.pos = -1 } }; System.Diagnostics = System.Diagnostics ? System.Diagnostics : {}; System.Type.RegisterNamespace("System.Diagnostics"); System.Diagnostics.TraceEventType = function () { }; System.Diagnostics.TraceEventType.prototype = { Critical: 0, Error: 1, Information: 2 }; System.Type.RegisterEnum("System.Diagnostics.TraceEventType", !0); System.Diagnostics.TraceListener = function () { if (arguments[0] == System.Diagnostics.TraceInternal || arguments[0].GetType().Name == "TraceListener") return arguments[0] }; System.Diagnostics.TraceListener.prototype = { Filter: null, Flush: function () { }, Ident: function () { }, TraceEvent: function () { }, Unindent: function () { }, Write: function (n, t) { (this.Filter == null || this.Filter.ShouldTrace(null, "", TraceEventType.Verbose, 0, n)) && (t == null ? this.Write(n) : this.Write(t + ": " + (n == null ? "" : n))) }, WriteLine: function () { }, Fail: function (n, t) { var i = new System.Text.StringBuilder; i.Append("TraceListenerFail"); i.Append(" "); i.Append(n); t && (i.Append(" "), i.Append(t)); this.WriteLine(i.ToString()) } }; System.Type.RegisterClass("System.Diagnostics.TraceListener"); System.Diagnostics.TraceInternal = new function () { this.IdentLevel = 0; this._invoke = function (n, t) { for (var i, u = System.Diagnostics.Trace.Listeners(), r = 0; r < u.length; r++)i = new System.Diagnostics.TraceListener(u[r]), i[n].apply(i, t), it.AutoFlush && i.Flush() }; this.Write = function (n) { this._invoke.apply(this, ["Write", n]) }; this.WriteLine = function (n) { this._invoke.apply(thistory, ["WriteLine", n]) }; this.Indent = function () { var t, n, i; for (indentLevel < 2147483647 && indentLevel++ , t = System.Diagnostics.Trace.Listeners(), n = 0; n < t.length; n++)i = new System.Diagnostics.TraceListener(t[n]), i.IndentLevel = this.IndentLevel }; this.TraceEvent = function () { this._invoke.apply(this, ["TraceEvent", arguments]) }; this.Unindent = function () { var t, n, i; for (indentLevel > 0 && indentLevel-- , t = System.Diagnostics.Trace.Listeners(), n = 0; n < t.length; n++)i = new System.Diagnostics.TraceListener(t[n]), i.IndentLevel = this.IndentLevel } }; System.Diagnostics.Trace = new System.Diagnostics.TraceListener(System.Diagnostics.TraceInternal); System.Diagnostics.Trace.AutoFlush = !1; System.Diagnostics.Trace.Listeners = []; System.Extensions.Apply.apply(this); System.Convert = System.Convert ? System.Convert : {}; System.Type.RegisterNamespace("System.Convert"); System.Convert.Base64Array = function () { this.S = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="; this.CA = []; this.IA = []; this.InitializeClass = function () { for (var t = "", n = 0; n < this.S.length; n++)t = this.S.charAt(n), this.CA[n] = t, this.IA[t] = n }; this.InitializeClass() }; System.Convert.ToBase64String = function (n, t) { var r = new System.Convert.Base64Array, e = n ? n.length : 0, o, h, c; if (e == 0) return new Array(0); for (var l = Math.floor(e / 3) * 3, a = (e - 1) / 3 + 1 << 2, f = a + (t ? (a - 1) / 76 << 1 : 0), i = new Array(f), s = 0, u = 0, v = 0; s < l;)o = (n[s++] & 255) << 16 | (n[s++] & 255) << 8 | n[s++] & 255, i[u++] = r.CA[o >>> 18 & 63], i[u++] = r.CA[o >>> 12 & 63], i[u++] = r.CA[o >>> 6 & 63], i[u++] = r.CA[o & 63], t && ++v == 19 && u < f - 2 && (i[u++] = "\r", i[u++] = "\n", v = 0); return h = e - l, h > 0 && (c = (n[l] & 255) << 10 | (h == 2 ? (n[e - 1] & 255) << 2 : 0), i[f - 4] = r.CA[c >> 12], i[f - 3] = r.CA[c >>> 6 & 63], i[f - 2] = h == 2 ? r.CA[c & 63] : "=", i[f - 1] = "="), i.join("") }; System.Convert.FromBase64String = function (n, t) { var f = new System.Convert.Base64Array, v, o, l, a, c, b; if (t && (v = new RegExp("[^" + f.S + "]", "g"), n = n.replace(v, "")), o = n.length, o == 0) return new Array(0); var i = 0, s = o - 1, y = n.charAt(s) == "=" ? n.charAt(s - 1) == "=" ? 2 : 1 : 0, p = s - i + 1, k = n.charAt(76) == "\r" ? p / 78 : 0, w = o > 76 ? k << 1 : 0, h = ((p - w) * 6 >> 3) - y, e = new Array(h), r = 0, d = Math.floor(h / 3) * 3, u; for (l = 0; r < d;)u = f.IA[n.charAt(i++)] << 18 | f.IA[n.charAt(i++)] << 12 | f.IA[n.charAt(i++)] << 6 | f.IA[n.charAt(i++)], e[r++] = u >> 16, e[r++] = (u & 65535) >> 8, e[r++] = u & 255, w > 0 && ++l == 19 && (i += 2, l = 0); if (r < h) { for (u = 0, a = 0; i <= s - y; a++)u |= f.IA[n.charAt(i++)] << 18 - a * 6; for (c = 16; r < h; c -= 8)b = Math.pow(2, c + 8) - 1, e[r++] = (u & b) >> c } return e }; System.Convert.HexStringToBytes = function (n) { var i, t; for ((n.indexOf("0x") == 0 || n.indexOf("0X") == 0) && (n = n.substring(2)), n.length % 2 == 1 && (n = "0" + n), i = [], t = 0; t < n.length; t += 2)i[t / 2] = parseInt(n.slice(t, t + 2), 16); return i }; System.Convert.BytesToHexString = function (n, t) { var u = [], i, r, f; if (n) { for (i = 0; i < n.length; i++)r = n[i], r <= 15 ? u.push("0" + r.toString(16)) : u.push(r.toString(16)); return f = t ? t : "", u.join(f) } }; System.IO = System.IO ? System.IO : {}; System.Type.RegisterNamespace("System.IO"); System.IO.Directory = function () { }; System.Type.RegisterClass("System.IO.Directory"); System.IO.Directory.CreateDirectory = function (n) { var e = null, u = new ActiveXObject("Scripting.FileSystemObject"), f = new String(n), r, o, t, i, s; for (f.indexOf(":") == -1 && (f = Server.MapPath(n)), r = [], o = new RegExp("\\\\", "g"), r = f.split(o), t = "", i = 0; i < r.length; i++)if (s = r[i], i > 0 && (t += "\\"), t += s, i > 0 && !u.FolderExists(t)) { Trace.Write("Create folder: " + t); try { u.CreateFolder(t); e = u.GetFolder(t) } catch (h) { } } return e }; System.IO.Directory.GetItems = function (n, t, i) { var c = new ActiveXObject("Scripting.FileSystemObject"), f = c.GetFolder(n), r = new Enumerator(i ? f.Files : f.SubFolders), e = [], o = "", s, l, u, h; for (o = t ? t : ".*", s = new RegExp(o), l = ""; !r.atEnd(); r.moveNext())u = r.item(), h = u.Name.match(s) != null, h && e.push(u); return e }; System.IO.Directory.GetFiles = function (n, t) { return System.IO.Directory.GetItems(n, t, !0) }; System.IO.Directory.GetDirectories = function (n, t) { return System.IO.Directory.GetItems(n, t, !1) }; System.IO.File = function () { }; System.Type.RegisterClass("System.IO.File"); System.IO.File.ReadAllText = function (n) { var u; if (1) { var f = new ActiveXObject("Scripting.FileSystemObject"), i = fso.OpenTextFile(n, 1), r = ""; return r = i.ReadAll(), i.Close(), delete i, r } var t = Server.CreateObject("ADODB.Stream"); return t.Type = 1, t.Open(), t.LoadFromFile(n), u = t.Read(), delete t, u }; System.IO.File.WriteAllText = function (n, t, i) { if (typeof t == "string") { var f = new ActiveXObject("Scripting.FileSystemObject"), u = f.CreateTextFile(n); u.Write(t); u.Close(); delete u } else { var r = Server.CreateObject("ADODB.Stream"); r.Type = 1; i != null && (r.CharSet = i); r.Open(); try { r.Write(t) } catch (e) { } r.SaveToFile(n, 2); delete r } }; System.IO.File.Delete = function (n, t) { var i = new ActiveXObject("Scripting.FileSystemObject"); return t = t == !0, i.DeleteFile(n, t) }; System.IO.File.Exists = function (n) { var t = new ActiveXObject("Scripting.FileSystemObject"); return t.FileExists(n) }; System.IO.File.Move = function (n, t) { var i = new ActiveXObject("Scripting.FileSystemObject"); return i.MoveFile(n, t) }; System.IO.Path = function () { }; System.Type.RegisterClass("System.IO.Path"); System.IO.Path = function () { this.AltDirectorySeparatorChar = "/"; this.DirectorySeparatorChar = "\\"; this.ERROR_SUCCESS = 0; this.InternalInvalidPathChars = ['"', "<", ">", "|", '\0', "\b", "\x0010", "\x0011", "\x0012", "\x0014", "\x0015", "\x0016", "\x0017", "\x0018", "\x0019"]; this.InvalidPathChars = ['"', "<", ">", "|", '\0', "\b", "\x0010", "\x0011", "\x0012", "\x0014", "\x0015", "\x0016", "\x0017", "\x0018", "\x0019"]; this.MAX_DIRECTORY_PATH = 248; this.MAX_PATH = 260; this.PathSeparator = ";"; this.VolumeSeparatorChar = ":"; this.CheckInvalidPathChars = function (n) { var t = new RegExp("[" + this.InternalInvalidPathChars.toString().replace(",", "", "g") + "]"); return n.match(t) ? !0 : !1 }; this.FixupPath = function (n) { return n }; this.IsDirectorySeparator = function (n) { return n == this.AltDirectorySeparatorChar || n == this.DirectorySeparatorChar }; this.GetRootLength = function (n) { var t, i, r; if (!this.CheckInvalidPathChars(n)) { if (t = 0, i = n.length, i >= 1 && this.IsDirectorySeparator(n.charAt(0))) { if (t = 1, i >= 2 && this.IsDirectorySeparator(n.charAt(1))) for (t = 2, r = 2; t < i && (n.charAt(t) != this.DirectorySeparatorChar && n.charAt(t) != this.AltDirectorySeparatorChar || --r > 0);)t++; return t } return i >= 2 && n.charAt(1) == this.VolumeSeparatorChar && (t = 2, i >= 3 && this.IsDirectorySeparator(n.charAt(2)) && t++), t } }; this.GetDirectoryName = function (n) { var r, i, t; if (n != null && (r = this.CheckInvalidPathChars(n), n = this.FixupPath(n), i = this.GetRootLength(n), n.length > i)) { if (t = n.length, t == i) return null; while (t > i && n.charAt(--t) != this.DirectorySeparatorChar && n.charAt(t) != this.AltDirectorySeparatorChar); return n.substr(0, t) } return null }; this.GetExtension = function (n) { var r, t, i; if (n != null && !this.CheckInvalidPathChars(n)) { for (r = n.length, t = r; --t >= 0;) { if (i = n.charAt(t), i == ".") return t != r - 1 ? n.substr(t, r - t) : ""; if (i == this.DirectorySeparatorChar || i == this.AltDirectorySeparatorChar || i == this.VolumeSeparatorChar) break } return "" } }; this.GetFileName = function (n) { var r, t, i; if (n != null && !this.CheckInvalidPathChars(n)) for (r = n.length, t = r; --t >= 0;)if (i = n.charAt(t), i == this.DirectorySeparatorChar || i == this.AltDirectorySeparatorChar || i == this.VolumeSeparatorChar) return n.substr(t + 1, r - t - 1); return n }; this.GetFileNameWithoutExtension = function (n) { if (n = this.GetFileName(n), n == null) return null; var t = n.lastIndexOf("."); return t == -1 ? n : n.substr(0, t) }; this.HasExtension = function (n) { var i, t; if (n != null && !this.CheckInvalidPathChars(n)) for (i = n.length; --i >= 0;) { if (t = n.charAt(i), t == ".") return i != n.length - 1; if (t == this.DirectorySeparatorChar || t == this.AltDirectorySeparatorChar || t == this.VolumeSeparatorChar) break } return !1 }; this.GetPathRoot = function (n) { return n == null ? null : (n = this.FixupPath(n), n.substr(0, this.GetRootLength(n))) }; this.IsPathRooted = function (n) { if (n != null && !this.CheckInvalidPathChars(n)) { var t = n.length; if (t >= 1 && (n.charAt(0) == this.DirectorySeparatorChar || n.charAt(0) == this.AltDirectorySeparatorChar) || t >= 2 && n.charAt(1) == this.VolumeSeparatorChar) return !0 } return !1 }; this.Combine = function (n, t) { if (n != null && t != null && !(this.CheckInvalidPathChars(n) || this.CheckInvalidPathChars(t))) { if (t.length == 0) return n; if (n.length == 0 || this.IsPathRooted(t)) return t; var i = n.charAt(n.length - 1); return i != this.DirectorySeparatorChar && i != this.AltDirectorySeparatorChar && i != this.VolumeSeparatorChar ? n + this.DirectorySeparatorChar + t : n + t } }; this.Initialize = function () { }; this.Initialize.apply(this, arguments) }; System.IO.Stream = function () { this.Buffer = []; this.Capacity = 0; this.Length = 0; this.Position = 0; this.CanWrite = !0; this.CanRead = !0; var n = !1, t = null, i = 1; this.Read = function (t, i, r) { var u, f; if (i + r > t.length) throw new System.Exception("The sum of 'offset' and 'count' is larger than the 'buffer' length."); if (u = 0, !n) { for (u = Math.min(r, this.Buffer.length - this.Position), f = 0; f < u; f++)t[i + f] = this.Buffer[this.Position + f]; this.Position += u } return u }; this.ToArray = function () { var t = []; return n || (t = this.Buffer.slice(0, this.Buffer.length)), t }; this.Flush = function () { n }; this.Write = function (t, i, r) { if (i + r > t.length) throw new System.Exception("The sum of 'offset' and 'count' is greater than the 'buffer' length."); if (!n) { for (var u = 0; u < r; u++)this.Buffer[this.Position + u] = t[i + u]; this.Position += r } }; this.WriteTo = function (t) { n || t.Write(this.Buffer, 0, this.Buffer.length) }; this.Close = function () { n ? t.Close() : this.Dispose(!0) }; this.CopyTo = function (n, t) { arguments.length == 1 && (t = 4096); for (var r = 0, i = new System.Byte(t); (r = this.Read(i, 0, i.length)) != 0;)n.Write(i, 0, r) }; this.Dispose = function () { arguments.length == 0 && this.Dispose_0(); arguments.length == 1 && this.Dispose_1(!0) }; this.Dispose_0 = function () { this.Close() }; this.Dispose_1 = function () { }; this.Initialize = function () { if (n) t = Server.CreateObject("ADODB.Stream"), t.Type = i, t.Open(); else if (arguments[0]) { var r = arguments[0]; this.Write(r, 0, r.length); this.Capacity = r.length; this.Length = r.length; this.Position = 0 } }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.IO.Stream"); System.IO.MemoryStream = function () { var n = System.Type.Inherits(this, new System.IO.Stream); this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.IO.MemoryStream"); System.IO.InvalidDataException = function (n) { var i = new System.Type.Inherits(this, new System.Exception), t; return this.message = "", this.message += n ? n : "Invalid Data.", t = Error.create(this.message, { name: this.GetType().FullName }), t.popStackFrame(), t }; System.Type.RegisterClass("System.IO.InvalidDataException"); System.Type.RegisterNamespace("System.Text"); System.Text.PadZeros = function (n, t) { var i = n.toString(), u = t - i.length, r; if (u > 0) for (r = 1; r <= u; r++)i = "0" + i; return i }; System.Text.Trim = function (n, t) { t == null && (t = " "); var r = new RegExp("^[" + t + "]+", "g"), u = new RegExp("[" + t + "]+$", "g"), i = ""; return i = n.replace(r, ""), i.replace(u, "") }; System.Text.ToTitleCase = function (n) { function i(n, t, i) { return t.toUpperCase() + i.toLowerCase() } var t = new RegExp("([A-Z])([A-Z]+)", "ig"); return n.replace(t, i) }; System.Text.ToCamelCase = function (n) { function i(n, t, i) { return t.toUpperCase() + i.toLowerCase() } var t = new RegExp("([A-Z])([A-Z]+)", "ig"); return n.replace(t, i) }; System.Text.HtmlSymbolCodes = { 34: "quot", 38: "amp", 60: "lt", 62: "gt", 160: "nbsp", 161: "iexcl", 162: "cent", 163: "pound", 164: "curren", 165: "yen", 166: "brvbar", 167: "sect", 168: "uml", 169: "copy", 170: "ordf", 171: "laquo", 172: "not", 173: "shy", 174: "reg", 175: "macr", 176: "deg", 177: "plusmn", 178: "sup2", 179: "sup3", 180: "acute", 181: "micro", 182: "para", 183: "middot", 184: "cedil", 185: "sup1", 186: "ordm", 187: "raquo", 188: "frac14", 189: "frac12", 190: "frac34", 191: "iquest", 192: "Agrave", 193: "Aacute", 194: "Acirc", 195: "Atilde", 196: "Auml", 197: "Aring", 198: "AElig", 199: "Ccedil", 200: "Egrave", 201: "Eacute", 202: "Ecirc", 203: "Euml", 204: "Igrave", 205: "Iacute", 206: "Icirc", 207: "Iuml", 208: "ETH", 209: "Ntilde", 210: "Ograve", 211: "Oacute", 212: "Ocirc", 213: "Otilde", 214: "Ouml", 215: "times", 216: "Oslash", 217: "Ugrave", 218: "Uacute", 219: "Ucirc", 220: "Uuml", 221: "Yacute", 222: "THORN", 223: "szlig", 224: "agrave", 225: "aacute", 226: "acirc", 227: "atilde", 228: "auml", 229: "aring", 230: "aelig", 231: "ccedil", 232: "egrave", 233: "eacute", 234: "ecirc", 235: "euml", 236: "igrave", 237: "iacute", 238: "icirc", 239: "iuml", 240: "eth", 241: "ntilde", 242: "ograve", 243: "oacute", 244: "ocirc", 245: "otilde", 246: "ouml", 247: "divide", 248: "oslash", 249: "ugrave", 250: "uacute", 251: "ucirc", 252: "uuml", 253: "yacute", 254: "thorn", 255: "yuml", 338: "OElig", 339: "oelig", 352: "Scaron", 353: "scaron", 376: "Yuml", 402: "fnof", 710: "circ", 732: "tilde", 913: "Alpha", 914: "Beta", 915: "Gamma", 916: "Delta", 917: "Epsilon", 918: "Zeta", 919: "Eta", 920: "Theta", 921: "Iota", 922: "Kappa", 923: "Lambda", 924: "Mu", 925: "Nu", 926: "Xi", 927: "Omicron", 928: "Pi", 929: "Rho", 931: "Sigma", 932: "Tau", 933: "Upsilon", 934: "Phi", 935: "Chi", 936: "Psi", 937: "Omega", 945: "alpha", 946: "beta", 947: "gamma", 948: "delta", 949: "epsilon", 950: "zeta", 951: "eta", 952: "theta", 953: "iota", 954: "kappa", 955: "lambda", 956: "mu", 957: "nu", 958: "xi", 959: "omicron", 960: "pi", 961: "rho", 962: "sigmaf", 963: "sigma", 964: "tau", 965: "upsilon", 966: "phi", 967: "chi", 968: "psi", 969: "omega", 977: "thetasym", 978: "upsih", 982: "piv", 8194: "ensp", 8195: "emsp", 8201: "thinsp", 8204: "zwnj", 8205: "zwj", 8206: "lrm", 8207: "rlm", 8211: "ndash", 8212: "mdash", 8216: "lsquo", 8217: "rsquo", 8218: "sbquo", 8220: "ldquo", 8221: "rdquo", 8222: "bdquo", 8224: "dagger", 8225: "Dagger", 8226: "bull", 8230: "hellip", 8240: "permil", 8242: "prime", 8243: "Prime", 8249: "lsaquo", 8250: "rsaquo", 8254: "oline", 8260: "frasl", 8364: "euro", 8465: "image", 8472: "weierp", 8476: "real", 8482: "trade", 8501: "alefsym", 8592: "larr", 8593: "uarr", 8594: "rarr", 8595: "darr", 8596: "harr", 8629: "crarr", 8656: "lArr", 8657: "uArr", 8658: "rArr", 8659: "dArr", 8660: "hArr", 8704: "forall", 8706: "part", 8707: "exist", 8709: "empty", 8711: "nabla", 8712: "isin", 8713: "notin", 8715: "ni", 8719: "prod", 8721: "sum", 8722: "minus", 8727: "lowast", 8730: "radic", 8733: "prop", 8734: "infin", 8736: "ang", 8743: "and", 8744: "or", 8745: "cap", 8746: "cup", 8747: "int", 8756: "there4", 8764: "sim", 8773: "cong", 8776: "asymp", 8800: "ne", 8801: "equiv", 8804: "le", 8805: "ge", 8834: "sub", 8835: "sup", 8836: "nsub", 8838: "sube", 8839: "supe", 8853: "oplus", 8855: "otimes", 8869: "perp", 8901: "sdot", 8968: "lceil", 8969: "rceil", 8970: "lfloor", 8971: "rfloor", 9001: "lang", 9002: "rang", 9674: "loz", 9824: "spades", 9827: "clubs", 9829: "hearts", 9830: "diams" }; System.Text.HtmlChars = {}; for (property in System.Text.HtmlSymbolCodes) name = System.Text.HtmlSymbolCodes[property], System.Text.HtmlChars[name] = String.fromCharCode(property); System.Text.HtmlDecode = function (n) { var f = "", e, i, r, u, t; if (n != null) for (e = n.length, i = 0; i < e; i++)r = n.charAt(i), r == "&" && (u = n.indexOf(";", i + 1), u > 0 && (t = n.substring(i + 1, u), r = t.length > 1 && t.charAt(0) == "#" ? t.charAt(1) == "x" || t.charAt(1) == "X" ? String.fromCharCode(eval("0" + t.substring(1))) : String.fromCharCode(eval(t.substring(1))) : System.Text.HtmlChars[t] ? System.Text.HtmlChars[t] : "", i = u)), f += r; return f }; System.Text.StringArray = {}; System.Text.StringArray.ToArray = function () { }; System.Text.StringArray.AddValue = function (n, t, i) { var s = new RegExp(";", "g"), u, r, f, e, o; return n = n.replace(s, ","), u = new RegExp("[^a-z0-9,\\\\]", "gi"), n = n.replace(new RegExp("^.*<", "g"), ","), n = n.replace(u, ""), n = "," + System.Text.Trim(n, ",") + ",", r = System.Text.Trim(t, " "), n = n.replace("," + r + ",", ",", "gi"), n = System.Text.Trim(n, ","), i != !1 && (f = new RegExp("^.*<", "g"), e = new RegExp(">.*$", "g"), r = r.replace(f, ""), r = r.replace(e, ""), n = n + "," + r), n = System.Text.Trim(n, ","), o = new RegExp(",", "gi"), n.replace(o, ", ") }; System.Text.StringArray.IsMatch = function (n, t) { var i = new RegExp("[^a-z0-9,\\\\]", "gi"); n = n.replace(i, ""); var r = new RegExp("^" + t + ",|," + t + ",|," + t + "$|^" + t + "$", "gi"), u = n.match(r); return u != null }; System.Type.RegisterNamespace("System.Text.RegularExpressions.Templates"); System.Text.RegularExpressions.Templates.Email = new RegExp("^[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)@[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)$", "i"); System.Text.RegularExpressions.Templates.EmailStrict = new RegExp("^[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)@[A-Z0-9_%-]+(|([.][A-Z0-9_%-]+)+)[.](([0-9]{1,3})|([A-Z]{2,3})|(aero|coop|info|museum|name))$", "i"); System.Text.RegularExpressions.GetByTag = function (n, t) { var i = new RegExp("<s*" + n + "[^>]*>(.*?)<s*/" + n + "s*>", "g"); return i.ignoreCase = t == !0, i }; System.Text.RegularExpressions.GetMatch = function (n, t, i) { var u = "", r, f; return i == null && (i = "$1"), r = new RegExp(t), n.match(r) != null && (f = n.match(r)[0], u = f.replace(r, i)), u }; System.Text.RegularExpressions.GetEscapedPattern = function (n) { for (var i, r = "", t = 0; t < n.length; t++)i = n.charCodeAt(t).toString(16), r += "\\u" + "0000".substr(0, 4 - i.length) + i + ""; return r }; System.Text.RegularExpressions.Trim = function (n, t, i) { var r; t || (t = " "); r = t; i && (r = System.Text.RegularExpressions.GetEscapedPattern(t)); var u = new RegExp("^[" + r + "]+", "gm"), f = new RegExp("[" + r + "]+$", "gm"); return n.replace(u, "").replace(f, "") }; System.Text.RegularExpressions.Replace = function (n, t, i, r) { n = new String(n); var u = new RegExp(t, "g"), f = new RegExp(i); return u.ignoreCase = r == !0, n.replace(u, i) }; System.Text.ControlChars = { Tab: 9, Vt: 11, Ff: 12, Space: 32, Lf: 10, Bs: 8, Ht: 9, Dq: 34, Sq: 39, Bh: 92 }; System.Text.UtfSignatures = { Utf16Le: 65535, Utf16Be: 65279, Utf8: 15711167 }; System.Text.StringBuilder = function (n) { var t = []; this.Append = function (n, i) { var u = !0, i, r; if (typeof n == "undefined") u = !1; else for (i = i ? i : 1, r = 0; r < i; r++)t.push(n); return u }; this.AppendLine = function (n) { return this.Append(n + "\r\n") }; this.Clear = function () { t.length > 0 && t.splice(0, t.length) }; this.IsEmpty = function () { return t.length == 0 }; this.ToString = function (n) { return t.join(n || "") }; this.ToArray = function () { return t }; this.InitializeClass = function () { n && this.Append(n) }; this.InitializeClass() }; System.Type.RegisterClass("System.Text.StringBuilder"); System.Text.Encoding = function () { }; System.Type.RegisterClass("System.Text.Encoding"); System.Text.UTF8Encoder = function () { var n = this; this.GetBytes = function (n) { for (var i = [], t = 0, r = 0; r < n.length; r++)t = n.charCodeAt(r), t < 128 ? i.push(t) : t < 2048 ? (i.push(192 | t >> 6), i.push(128 | t & 63)) : t < 65536 ? (i.push(224 | t >> 12), i.push(128 | t >> 6 & 63), i.push(128 | t & 63)) : t < 2097152 ? (i.push(240 | t >> 18), i.push(128 | t >> 12 & 63), i.push(128 | t >> 6 & 63), i.push(128 | t & 63)) : i.push(63); return i }; this.GetString = function (n) { for (var r = "", i = 0, u = 0, f = 0, o = 0, h = 0, e = 0, s = n.length, t = 0; t < s; t++)i = n[t], i < 128 ? r += i > 0 ? String.fromCharCode(i) : "" : i < 192 || (i < 224 ? s > t + 1 && (u = i & 31, t++ , f = n[t] & 63, e = u << 6 | f, r += String.fromCharCode(e)) : i < 240 ? s > t + 2 && (u = i & 15, t++ , f = n[t] & 63, t++ , o = n[t] & 63, e = u << 12 | f << 6 | o, r += String.fromCharCode(e)) : i < 248 ? s > t + 3 && (u = i & 7, t++ , f = n[t] & 63, t++ , o = n[t] & 63, t++ , h = n[t] & 63, e = u << 18 | (f << 12)(o << 6) | h, r += String.fromCharCode(e)) : r += "?"); return r }; this.InitializeClass = function () { }; this.InitializeClass() }; System.Type.RegisterClass("System.Text.UTF8Encoder"); System.Text.Encoding.UTF8 = new System.Text.UTF8Encoder; System.Text.UnicodeEncoder = function () { var n = this; this.GetBytes = function (n) { for (var i = [], t = 0, r = 0; r < n.length; r++)t = n.charCodeAt(r), t > 65535 ? (i.push(56320 | t & 1023), i.push(55232 + (t >> 10))) : (i.push(t & 255), i.push(t >> 8)); return i }; this.GetString = function (n) { for (var i = "", r = 0, u = 0, t = 0; t < n.length; t++)r = n[t], t++ , u = n[t], i += String.fromCharCode(u << 8 | r); return i }; this.InitializeClass = function () { }; this.InitializeClass() }; System.Type.RegisterClass("System.Text.UnicodeEncoder"); System.Text.Encoding.Unicode = new System.Text.UnicodeEncoder; System.Text.ASCIIEncoder = function () { var n = this; this.GetBytes = function (n) { for (var t = [], i = 0, r = 0; r < n.length; r++)i = n.charCodeAt(r), i > 255 ? t.push(63) : t.push(i); return t }; this.GetString = function (n) { for (var i = "", t = 0; t < n.length; t++)i += String.fromCharCode(n[t]); return i }; this.InitializeClass = function () { }; this.InitializeClass() }; System.Type.RegisterClass("System.Text.ASCIIEncoder"); System.Text.Encoding.ASCII = new System.Text.ASCIIEncoder; System._bitConverter = function () { function i(t, i, r, u, f) { var c = n[u], s = (c ? c : 32) / 8, h, e, o, l, a; for (i = i ? i : 0, r = r ? r : t.length - i, h = new Array(r * s), a = i + r, e = i; e < a; e++)for (o = 0; o < s; o++)l = f ? e * s + s - 1 - o : e * s + o, h[l] = t[e] >> o * 8 & 255; return h } function r(t, i, r, u, f) { var s = n[u], h = (s ? s : 32) / 8, l, c, a, o, e, v; for (i = i ? i : 0, r = r ? r : t.length - i, l = 255, c = Array(), e = 0; e < r; e++)v = (e - e % h) / h, a = t[i + e] & l, o = e % h * 8, f && (o = s - 8 - o), c[v] |= a << o; return c } function f(n, t) { for (var u = 0, i = t.length, r; i--;)r = (n[i] | 0) + t[i] + u, n[i] = r % 10, u = r > 9 } function u(n) { for (var r = 0, u = n.length, i, t = 0; t < u; t++)(i = n[t]) != "." && (i += 10 * r, r = i & 1, n[t] = i >> 1); r && (n[t] = 5) } function e(n, t) { for (var r = [0], e = [10], o = t + 1, s = n.length, i = o; i < s; i++)u(e), n[i] == 1 && f(r, e); return r } function o(n) { var t = n.length; for (C = 0, T; t--;)(T = n[t]) != "." && (T = 2 * T + C, n[t] = T % 10, C = T > 9); C && n.unshift(1) } var t, n; this.IsLittleEndian; t = {}; t[System.TypeCode.Boolean] = 1; t[System.TypeCode.Byte] = 255; t[System.TypeCode.SByte] = 127; t[System.TypeCode.Int16] = 32767; t[System.TypeCode.Int32] = 2147483647; t[System.TypeCode.UInt16] = 65535; t[System.TypeCode.UInt32] = 4294967295; n = {}; n[System.TypeCode.Boolean] = 1; n[System.TypeCode.Byte] = 8; n[System.TypeCode.SByte] = 8; n[System.TypeCode.Int16] = 16; n[System.TypeCode.Int32] = 32; n[System.TypeCode.UInt16] = 16; n[System.TypeCode.UInt32] = 32; this.GetBytes = function (n, t) { switch (typeof n) { case "boolean": return n ? [1] : [0]; case "number": switch (t) { case System.TypeCode.Single: return this.GetBytesFromNumber(n, 32); case System.TypeCode.Double: return this.GetBytesFromNumber(n, 64); case System.TypeCode.Int16: case System.TypeCode.UInt16: return this.GetBytesFromInt16Le(n); case System.TypeCode.Int32: case System.TypeCode.UInt32: return this.GetBytesFromInt32Le(n); default: return this.GetBytesFromInt32Le(n) }break; case "object": switch (t) { case System.TypeCode.Single: return this.GetBytesFromNumber(n, 32); case System.TypeCode.Double: return this.GetBytesFromNumber(n, 64); case System.TypeCode.Int16: case System.TypeCode.UInt16: case System.TypeCode.Int32: case System.TypeCode.UInt32: return this.GetBytesFromInt32ArrayLe(n); default: return this.GetBytesFromInt32ArrayLe(n) } } }; this.ToSingle = function (n, t) { var i = n.slice(t, t + 4); return this.ToNumber(i) }; this.ToDouble = function (n, t) { var i = n.slice(t, t + 8); return this.ToNumber(i) }; this.ToBoolean = function (n, t) { return n[t] & 1 ? !0 : !1 }; this.ToInt16Le = function (n, t) { return this.ToInt16ArrayLe(n, t, 2)[0] }; this.ToInt16Be = function (n, t) { return this.ToInt16ArrayBe(n, t, 2)[0] }; this.ToInt16 = this.ToInt16Le; this.ToUInt16Le = function (n, t) { return this.GetUnsigned(this.ToInt16Le(n, t), System.TypeCode.Int16) }; this.ToUInt16Be = function (n, t) { return this.GetUnsigned(this.ToInt16Be(n, t), System.TypeCode.Int16) }; this.ToUInt16 = this.ToUInt16Le; this.ToInt32Le = function (n, t) { return this.ToInt32ArrayLe(n, t, 4)[0] }; this.ToInt32Be = function (n, t) { return this.ToInt32ArrayBe(n, t, 4)[0] }; this.ToInt32 = this.ToInt32Le; this.ToUInt32Le = function (n, t) { return this.GetUnsigned(this.ToInt32Le(n, t), System.TypeCode.Int32) }; this.ToUInt32Be = function (n, t) { return this.GetUnsigned(this.ToInt32Be(n, t), System.TypeCode.Int32) }; this.ToUInt32 = this.ToUInt32Le; this._GetBytesFromInt = function (t, i, r) { var u = n[i], f = (u ? u : 32) / 8, e = new Array(4); for (b = 0; b < f; b++)m = r ? f - 1 - b : b, e[m] = t >> b * 8 & 255; return e }; this.GetBytesFromInt16Le = function (n) { return this._GetBytesFromInt(n, System.TypeCode.Int16, !1) }; this.GetBytesFromInt16Be = function (n) { return this._GetBytesFromInt(n, System.TypeCode.Int16, !0) }; this.GetBytesFromInt32Le = function (n) { return this._GetBytesFromInt(n, System.TypeCode.Int32, !1) }; this.GetBytesFromInt32Be = function (n) { return this._GetBytesFromInt(n, System.TypeCode.Int32, !0) }; this.GetBitsLe = function (t, i) { var s = t.length, r = n[i], o, u, f, e; for (r = r ? r : 32, o = new Array(s * r), u = 0; u < s; u++)for (f = t[u], e = 0; e < r; e++)o[u * r + e] = f & 1, f = f >> 1; return o }; this.GetBitsBe = function (t, i) { var s = t.length, r = n[i], o, u, f, e; for (r = r ? r : 32, o = new Array(s * r), u = 0; u < s; u++)for (f = t[u], e = 0; e < r; e++)o[u * r + r - 1 - e] = f & 1, f = f >> 1; return o }; this.GetBits = this.GetBitsLe; this.GetUnsigned = function (n, i) { var u, f = t[i + 1], e, r, o; if (typeof n == "number") u = (n & f) << 0 >>> 0; else for (f = t[i + 1], e = n.length, u = new Array(e), r = 0; r < e; r++)o = n[r], u[r] = (o & f) << 0 >>> 0; return u }; this.GetSigned = function (n, i) { var f, o = t[i], s = t[i - 1], e, r, u; if (typeof n == "number") f = n > s ? -(-n & o) : u; else for (e = n.length, f = new Array(e), r = 0; r < e; r++)u = n[r], f[r] = u > s ? -(-u & o) : u; return f }; this.GetBytesFromInt16ArrayLe = function (n, t, r) { return i(n, t, r, System.TypeCode.Int16, !1) }; this.GetBytesFromInt16ArrayBe = function (n, t, r) { return i(n, t, r, System.TypeCode.Int16, !0) }; this.GetBytesFromInt32ArrayLe = function (n, t, r) { return i(n, t, r, System.TypeCode.Int32, !1) }; this.GetBytesFromInt32ArrayBe = function (n, t, r) { return i(n, t, r, System.TypeCode.Int32, !0) }; this.ToInt16ArrayLe = function (n, t, i) { return r(n, t, i, System.TypeCode.Int16, !1) }; this.ToInt16ArrayBe = function (n, t, i) { return r(n, t, i, System.TypeCode.Int16, !0) }; this.ToInt32ArrayLe = function (n, t, i) { return r(n, t, i, System.TypeCode.Int32, !1) }; this.ToInt32ArrayBe = function (n, t, i) { return r(n, t, i, System.TypeCode.Int32, !0) }; this.Int16EndianSwap = function (n) { return n >> 8 | n << 8 }; this.Int32EndianSwap = function (n) { return n >> 24 | n << 8 & 16711680 | n >> 8 & 65280 | n << 24 }; this.Int64EndianSwap = function (n) { return n >> 56 | n << 40 & 0x00FF000000000000 | n << 24 & 0xff0000000000 | n << 8 & 0xff00000000 | n >> 8 & 4278190080 | n >> 24 & 16711680 | n >> 40 & 65280 | n << 56 }; this.ToString = function (n, t, i) { var o = [], u, f, r, s, e, h; if (n) { for (i = i ? i : "X2", u = parseInt(i.substr(1)), f = "", r = 0; r < u; r++)f += "0"; for (r = 0; r < n.length; r++)s = n[r] & 255, e = s.toString(16).toUpperCase(), o.push(f.substr(0, u - e.length) + e); return h = typeof t == "undefined" ? "-" : t, o.join(h) } }; this.SemSingleToBytes = function (n, t, i) { var r = new Array(4); return i = Math.pow(2, 23) * i + .5, r[3] = 255 & i, r[2] = 255 & i >> 8, r[1] = 127 & i >> 16 | (t & 1) << 7, r[0] = n << 7 | t >> 1, r }; this.SemDoubleToBytes = function (n, t, i) { var r = new Array(4); return i = Math.pow(2, 52) * i, r[3] = 65535 & i, r[2] = 65535 & i >> 16, i /= Math.pow(2, 32), r[1] = 65535 & i, r[0] = n << 15 | t << 4 | 15 & i >> 16, this.GetBytesFromInt16ArrayBe(r, 0, r.length) }; this.GetBytesFromNumber = function (n, t) { var i, f; this.Number = n; this.nb01 = ""; var s = { 32: { d: 127, c: 128, b: 0, a: 0 }, 64: { d: 32752, c: 0, b: 0, a: 0 } }, o = { 32: 8, 64: 11 }[t], h = t - o - 1, e, u, r; if (isNaN(n) && (i = s[t], i.a = 1, e = !1, u = Math.pow(2, o) - 1, r = Math.pow(2, -h)), i || (e = n < 0 || 1 / n < 0, isFinite(n) || (i = s[t], this.Sign && (i.d += 1 << t / 4 - 1), u = Math.pow(2, o) - 1, r = 0)), !i) { for (u = { 32: 127, 64: 1023 }[t], r = Math.abs(n); r >= 2;)u++ , r /= 2; while (r < 1 && this.Exponent > 0) u-- , r *= 2; u <= 0 && (r /= 2); t == 32 && this.Exponent > 254 && (i = { d: e ? 255 : 127, c: 128, b: 0, a: 0 }, u = Math.pow(2, o) - 1, r = 0) } return i ? (f = [i.a, i.b, i.c, i.d], t == 64 && (f = this.GetBytesFromInt16ArrayBe(f, 0, f.length))) : (t == 32 && (f = this.SemSingleToBytes(e, u, r)), t == 64 && (f = this.SemDoubleToBytes(e, u, r))), f.reverse() }; this.ToNumber = function (n) { var f = n.reverse(), s = this.GetBitsBe(f, System.TypeCode.Byte), h = this.GetBitsBe(f, System.TypeCode.Byte).join(""), r = { 32: 8, 64: 11 }[h.length], c = h.match(new RegExp("^(.)(.{" + r + "})(.*)$")), a = s[0] == 1 ? "-" : "+", l = +c[2] == 0, t = parseInt(c[2], 2) - Math.pow(2, r - 1) + 1, i = e(s, r), n; for (i.unshift(+!l, "."), l && t++; t < 0;)t++ , u(i); while (t > 0) t-- , o(i); return n = a + i.join("").replace(/(\d)0+$/, "$1"), +eval(n) }; this._isLittleEndian = function () { var n = this.GetBytes(-1.5, System.TypeCode.Double); return n[0] == 0 }; this.Initialize = function () { this.IsLittleEndian = this._isLittleEndian() }; this.Initialize.apply(this, arguments) }; System.BitConverter = new System._bitConverter; System.BitConverter.ToArrayDefinition = function (n, t, i) { var f = [], u = "<br />\r\nvar a = [<br />\r\n", e, o, r, s; for (t = t ? t : 8, i = i ? i : "X4", e = parseInt(i.substr(1)), o = "", r = 0; r < e; r++)o += "0"; for (r = 0; r < n.length; r++)s = n[r].toString(16).toUpperCase(), f.push(o.substr(0, e - s.length) + s), (r + 1) % t || (u += "0x", u += f.join(", 0x"), r < n.length - 1 && (u += ","), u += "<br />\r\n", f = []); return f.length > 0 && (u += "0x", u += f.join(", 0x"), u += "<br />\r\n"), u + "];" }; System.Type.RegisterNamespace("System"); System.BigInt = function () { function t(n, t) { for (var i = n.length; i-- > 0;)if (n[i] != t) break; return i + 1 } function i() { var n = arguments[0]; switch (typeof n) { case "string": this.FromString.apply(this, arguments); break; default: this.FromString.apply(this, ["0"]) } } var n = System.BigInt.Utils; this.digits = []; this.Clear = function () { this.digits = [] }; this.CopyFrom = function (n) { this.digits = [n.digits.length]; System.Array.Copy(n.digits, 0, this.digits, 0, n.digits.length) }; this.Clone = function () { var n = new System.BigInt; return n.CopyFrom(this), n }; this.Divide = function () { }; this.Multiply = function (n) { System.BigInt.Multiply(this, n, this) }; this.Equals = function (n) { return System.BigInt.Equals(this, n) }; this.GetHashCode = function () { }; this.IsNegative = function () { return n.IsNegative(this.digits) }; this.IsZero = function () { return !0 }; this.FromHex = function (n) { this.FromString(n, 16) }; this.ToHex = function () { return this.ToString(16) }; this.FromDecimal = function () { this.FromString(a, 10) }; this.ToDecimal = function () { return this.ToString(10) }; this.FromString = function (t, i) { var r = !1; t.indexOf("-") == 0 && (r = !0, t = t.substring(1, t.length)); t.indexOf("x") > -1 ? (t = t.substring(t.indexOf("x") + 1, t.length), this.digits = n.FromString(t, 16, 0)) : this.digits = typeof i == "undefined" ? n.FromString(t, 10, 0) : n.FromString(t, i, 0); r && n.Negate_(this.digits) }; this.ToString = function (t) { var i, r = this.digits, u = this.IsNegative(); return u && (r = n.Negate(r)), i = typeof t == "undefined" ? n.ToString(r, t) : n.ToString(r, t), u && (i = "-" + i), i }; this.ToByteArray = function () { var e = n.Clone(this.digits), i = n.ToArray(e, 256), u = this.IsNegative(), r, f; return u && (i[i.length - 1] = 255), r = t(i, u ? 255 : 0), f = (i[r - 1] & 128) != 0, u && !f && (i.push(255), r++), !u && f && (i.push(0), r++), i.slice(0, r) }; this.FromByteArray = function (t) { var i = (t[t.length - 1] & 128) != 0; this.digits = n.FromArray(t, 256) }; i.apply(this, arguments) }; System.BigInt.Compare = function (n, t) { if (n == null && t == null) return 0; if (n == null) return -1; if (t == null) return 1; var i = n.Size(), r = t.Size(); if (i == r) { while (i-- > 0) if (n.digits[i] != t.digits[i]) return n.digits[i] < t.digits[i] ? -1 : 1; return 0 } return i < r ? -1 : 1 }; System.BigInt.Equals = function (n, t) { return System.BigInt.Compare(n, t) == 0 }; System.BigInt.MoreThan = function (n, t) { return System.BigInt.Compare(n, t) == 1 }; System.BigInt.LessThan = function (n, t) { return System.BigInt.Compare(n, t) == -1 }; System.BigInt._Utils = function () { function bt(n) { for (var r, u, t = new Array(n), i = 0; i < n; i++)t[i] = 0; for (t[0] = 2, r = 0; t[r] < n;) { for (i = t[r] * t[r]; i < n; i += t[r])t[i] = 1; for (r++ , t[r] = t[r - 1] + 1; t[r] < n && t[t[r]]; t[r]++); } for (u = new Array(r), i = 0; i < r; i++)u[i] = t[i]; return u } function ei(n, t) { return mr_x1.length != n.length && (mr_x1 = u(n), mr_r = u(n), mr_a = u(n)), f(mr_a, t), kt(n, mr_a) } function kt(t, f) { var o, e, s, c; for (mr_x1.length != t.length && (mr_x1 = u(t), mr_r = u(t), mr_a = u(t)), r(mr_a, f), r(mr_r, t), r(mr_x1, t), h(mr_r, -1), h(mr_x1, -1), s = 0, o = 0; o < mr_r.length; o++)for (e = 1; e < i; e <<= 1)t[o] & e ? (c = s < mr_r.length + n ? s : 0, o = mr_r.length, e = i) : s++; if (c && ct(mr_r, c), et(mr_a, mr_r, t), !y(mr_a, 1) && !st(mr_a, mr_x1)) { for (e = 1; e <= c - 1 && !st(mr_a, mr_x1);) { if (ui(mr_a, t), y(mr_a, 1)) return 0; e++ } if (!st(mr_a, mr_x1)) return 0 } return 1 } function oi(t) { for (var r, u, i = t.length - 1; t[i] == 0 && i > 0; i--); for (r = 0, u = t[i]; u; u >>= 1, r++); return r + n * i } function d(t, i) { var u = g(0, (t.length > i ? t.length : i) * n, 0); return r(u, t), u } function yi(n) { var t = g(0, n, 0); return dt(t, n), l(t, 1) } function pi(n) { return n >= 600 ? a(n, 2) : n >= 550 ? a(n, 4) : n >= 500 ? a(n, 5) : n >= 400 ? a(n, 6) : n >= 350 ? a(n, 7) : n >= 300 ? a(n, 9) : n >= 250 ? a(n, 12) : n >= 200 ? a(n, 15) : n >= 150 ? a(n, 18) : n >= 100 ? a(n, 27) : a(n, 40) } function a(n, t) { var i, r, f, e; for (e = 3e4, i = g(0, n, 0), primes.length == 0 && (primes = bt(3e4)), rpprb.length != i.length && (rpprb = u(i)); ;) { for (it(i, n, 0), i[0] |= 1, f = 0, r = 0; r < primes.length && primes[r] <= e; r++)if (ut(i, primes[r]) == 0 && !y(i, primes[r])) { f = 1; break } for (r = 0; r < t && !f; r++) { for (it(rpprb, n, 0); !s(i, rpprb);)it(rpprb, n, 0); kt(i, rpprb) || (f = 1) } if (!f) return i } } function wi(n, t) { var i = u(n); return ft(i, t), l(i, 1) } function bi(n, t) { var i = d(n, n.length + 1); return h(i, t), l(i, 1) } function ki(n, t) { var i = d(n, n.length + t.length); return ri(i, t), l(i, 1) } function di(n, t, i) { var r = d(n, i.length); return et(r, l(t, 2), l(i, 2), 0), l(r, 1) } function p(n, t) { var h = v(n), f = v(t), u = n, r = t, i, e; return (h && (u = rt(n)), f && (r = rt(t)), h) ? f ? s(u, r) ? (i = p(u, r), tt(i), i) : p(r, u) : (i = ot(u, t), tt(i), i) : f ? ot(n, r) : s(u, r) ? (e = d(n, n.length > t.length ? n.length + 1 : t.length + 1), o(e, t), l(e, 1)) : (i = p(r, n), tt(i), i) } function ot(n, t) { var o = v(n), f = v(t), r = n, u = t, i, e; return (o && (r = rt(n)), f && (u = rt(t)), o) ? f ? (i = ot(r, u), tt(i), i) : s(u, r) ? p(u, r) : (i = p(r, u), tt(i), i) : f ? s(r, u) ? p(r, u) : (i = p(u, r), tt(i), i) : (e = d(n, n.length > t.length ? n.length + 1 : t.length + 1), b(e, t), l(e, 1)) } function gi(n, t) { var i = d(n, t.length), r; return r = si(i, t), r ? l(i, 1) : null } function nr(n, t, i) { var r = d(n, i.length); return yt(r, t, i), l(r, 1) } function dt(t, i) { var p, v, k, l, e, o, d, c, g, a, tt; if (primes.length == 0 && (primes = bt(3e4)), pows.length == 0) for (pows = new Array(512), e = 0; e < 512; e++)pows[e] = Math.pow(2, e / 511 - 1); if (p = .1, v = 20, recLimit = 20, s_i2.length != t.length && (s_i2 = u(t), s_R = u(t), s_n1 = u(t), s_r2 = u(t), s_d = u(t), s_x1 = u(t), s_x2 = u(t), s_b = u(t), s_n = u(t), s_i = u(t), s_rm = u(t), s_q = u(t), s_a = u(t), s_aa = u(t)), i <= recLimit) { for (k = (1 << (i + 2 >> 1)) - 1, f(t, 0), l = 1; l;)for (l = 0, t[0] = 1 | 1 << i - 1 | Math.floor(Math.random() * (1 << i)), e = 1; e < primes.length && (primes[e] & k) == primes[e]; e++)if (0 == t[0] % primes[e]) { l = 1; break } ci(t); return } if (d = p * i * i, i > 2 * v) for (o = 1; i - i * o <= v;)o = pows[Math.floor(Math.random() * 512)]; else o = .5; for (tt = Math.floor(o * i) + 1, dt(s_q, tt), f(s_i2, 0), s_i2[Math.floor((i - 2) / n)] |= 1 << (i - 2) % n, ti(s_i2, s_q, s_i, s_rm), g = oi(s_i); ;) { for (; ;)if (it(s_R, g, 0), s(s_i, s_R)) break; for (h(s_R, 1), b(s_R, s_i), r(s_n, s_q), ri(s_n, s_R), nt(s_n, 2), h(s_n, 1), r(s_r2, s_R), nt(s_r2, 2), c = 0, e = 0; e < primes.length && primes[e] < d; e++)if (ut(s_n, primes[e]) == 0 && !y(s_n, primes[e])) { c = 1; break } if (c || ei(s_n, 2) || (c = 1), !c) { for (h(s_n, -3), e = s_n.length - 1; s_n[e] == 0 && e > 0; e--); for (a = 0, w = s_n[e]; w; w >>= 1, a++); for (a += n * e; ;)if (it(s_a, a, 0), s(s_n, s_a)) break; if (h(s_n, 3), h(s_a, 2), r(s_b, s_a), r(s_n1, s_n), h(s_n1, -1), et(s_b, s_n1, s_n), h(s_b, -1), ht(s_b) && (r(s_b, s_a), et(s_b, s_r2, s_n), h(s_b, -1), r(s_aa, s_n), r(s_d, s_b), gt(s_d, s_n), y(s_d, 1))) { r(t, s_aa); return } } } } function tr(t, i) { var u, r; return u = Math.floor((t - 1) / n) + 2, r = g(0, 0, u), it(r, t, i), r } function it(t, i, r) { for (var f, u = 0; u < t.length; u++)t[u] = 0; for (f = Math.floor((i - 1) / n) + 1, u = 0; u < f; u++)t[u] = Math.floor(Math.random() * (1 << n - 1)); t[f - 1] &= (2 << (i - 1) % n) - 1; r == 1 && (t[f - 1] |= 1 << (i - 1) % n) } function ir(n, t) { var i, r; return i = u(n), r = u(t), gt(i, r), i } function gt(n, i) { var e, l, o, a, c, s, h, v, y; for (T.length != n.length && (T = u(n)), y = 1; y;) { for (y = 0, e = 1; e < i.length; e++)if (i[e]) { y = 1; break } if (!y) break; for (e = n.length; !n[e] && e >= 0; e--); for (l = n[e], o = i[e], a = 1, c = 0, s = 0, h = 1; o + s && o + h;) { if (v = Math.floor((l + a) / (o + s)), qp = Math.floor((l + c) / (o + h)), v != qp) break; t = a - v * s; a = s; s = t; t = c - v * h; c = h; h = t; t = l - v * o; l = o; o = t } c ? (r(T, n), ii(n, i, a, c), ii(i, T, h, s)) : (ft(n, i), r(T, n), r(n, i), r(i, T)) } if (i[0] != 0) for (t = ut(n, i[0]), f(n, i[0]), i[0] = t; i[0];)n[0] %= i[0], t = n[0], n[0] = i[0], i[0] = t } function si(n, t) { var i = 1 + 2 * Math.max(n.length, t.length); if (!(n[0] & 1) && !(t[0] & 1)) return f(n, 0), 0; for (eg_u.length != i && (eg_u = new Array(i), eg_v = new Array(i), eg_A = new Array(i), eg_B = new Array(i), eg_C = new Array(i), eg_D = new Array(i)), r(eg_u, n), r(eg_v, t), f(eg_A, 1), f(eg_B, 0), f(eg_C, 0), f(eg_D, 1); ;) { while (!(eg_u[0] & 1)) e(eg_u), eg_A[0] & 1 || eg_B[0] & 1 ? (b(eg_A, t), e(eg_A), o(eg_B, n), e(eg_B)) : (e(eg_A), e(eg_B)); while (!(eg_v[0] & 1)) e(eg_v), eg_C[0] & 1 || eg_D[0] & 1 ? (b(eg_C, t), e(eg_C), o(eg_D, n), e(eg_D)) : (e(eg_C), e(eg_D)); if (s(eg_v, eg_u) ? (o(eg_v, eg_u), o(eg_C, eg_A), o(eg_D, eg_B)) : (o(eg_u, eg_v), o(eg_A, eg_C), o(eg_B, eg_D)), y(eg_u, 0)) return (v(eg_C) && b(eg_C, t), r(n, eg_C), !y(eg_v, 1)) ? (f(n, 0), 0) : 1 } } function ni(n, t) { for (var i = 1, r = 0; ;) { if (n == 1) return i; if (n == 0) return 0; if (r -= i * Math.floor(t / n), t %= n, t == 1) return r; if (t == 0) return 0; i -= r * Math.floor(n / t); n %= t } } function rr(n, t, i, u, h) { var l = 0, c = Math.max(n.length, t.length); for (eg_u.length != c && (eg_u = new Array(c), eg_A = new Array(c), eg_B = new Array(c), eg_C = new Array(c), eg_D = new Array(c)); !(n[0] & 1) && !(t[0] & 1);)e(n), e(t), l++; for (r(eg_u, n), r(i, t), f(eg_A, 1), f(eg_B, 0), f(eg_C, 0), f(eg_D, 1); ;) { while (!(eg_u[0] & 1)) e(eg_u), eg_A[0] & 1 || eg_B[0] & 1 ? (b(eg_A, t), e(eg_A), o(eg_B, n), e(eg_B)) : (e(eg_A), e(eg_B)); while (!(i[0] & 1)) e(i), eg_C[0] & 1 || eg_D[0] & 1 ? (b(eg_C, t), e(eg_C), o(eg_D, n), e(eg_D)) : (e(eg_C), e(eg_D)); if (s(i, eg_u) ? (o(i, eg_u), o(eg_C, eg_A), o(eg_D, eg_B)) : (o(eg_u, i), o(eg_A, eg_C), o(eg_B, eg_D)), y(eg_u, 0)) { v(eg_C) && (b(eg_C, t), o(eg_D, n)); nt(eg_D, -1); r(u, eg_C); r(h, eg_D); lt(i, l); return } } } function v(t) { return t[t.length - 1] >> n - 1 & 1 } function hi(n, t, i) { var r, u = n.length, f = t.length; for (k = u + i < f ? u + i : f, r = f - 1 - i; r < u && r >= 0; r++)if (n[r] > 0) return 1; for (r = u - 1 + i; r < f; r++)if (t[r] > 0) return 0; for (r = k - 1; r >= i; r--) { if (n[r - i] > t[r]) return 1; if (n[r - i] < t[r]) return 0 } return 0 } function s(n, t) { for (var r = n.length < t.length ? n.length : t.length, i = n.length; i < t.length; i++)if (t[i]) return 0; for (i = t.length; i < n.length; i++)if (n[i]) return 1; for (i = r - 1; i >= 0; i--) { if (n[i] > t[i]) return 1; if (n[i] < t[i]) return 0 } return 0 } function ti(t, u, e, o) { var l, s, h, y, p, w, a, b; for (r(o, t), s = u.length; u[s - 1] == 0; s--); for (b = u[s - 1], a = 0; b; a++)b >>= 1; for (a = n - a, lt(u, a), lt(o, a), l = o.length; o[l - 1] == 0 && l > s; l--); for (f(e, 0); !hi(u, o, l - s);)ai(o, u, l - s), e[l - s]++; for (h = l - 1; h >= s; h--) { for (e[h - s] = o[h] == u[s - 1] ? i : Math.floor((o[h] * c + o[h - 1]) / u[s - 1]); ;)if (p = (s > 1 ? u[s - 2] : 0) * e[h - s], w = p >> n, p = p & i, y = w + e[h - s] * u[s - 1], w = y >> n, y = y & i, w == o[h] ? y == o[h - 1] ? p > (h > 1 ? o[h - 2] : 0) : y > o[h - 1] : w > o[h]) e[h - s]--; else break; vt(o, u, -e[h - s], h - s); v(o) && (li(o, u, h - s), e[h - s]--) } ct(u, a); ct(o, a) } function ci(t) { var u, e, r, f; for (e = t.length, r = 0, u = 0; u < e; u++)r += t[u], f = 0, r < 0 && (f = -(r >> n), r += f * c), t[u] = r & i, r = (r >> n) - f } function ut(n, t) { for (var r = 0, i = n.length - 1; i >= 0; i--)r = (r * c + n[i]) % t; return r } function g(t, i, r) { var u; return u = Math.ceil(i / n) + 1, u = r > u ? r : u, buff = new Array(u), f(buff, t), buff } function ur(n, t, i) { var s, u, f, o, c, e = n.length; if (t == -1) { for (f = new Array(0); ;) { for (o = new Array(f.length + 1), u = 0; u < f.length; u++)o[u + 1] = f[u]; if (o[0] = parseInt(n, 10), f = o, s = n.indexOf(",", 0), s < 1) break; if (n = n.substring(s + 1), n.length == 0) break } return f.length < i ? (o = new Array(i), r(o, f), o) : f } for (f = g(0, t * e, 0), u = 0; u < e; u++) { if (s = wt.indexOf(n.substring(u, u + 1), 0), t <= 36 && s >= 36 && (s -= 26), s >= t || s < 0) break; nt(f, t); h(f, s) } for (e = f.length; e > 0 && !f[e - 1]; e--); for (e = i > e + 1 ? i : e + 1, o = new Array(e), c = e < f.length ? e : f.length, u = 0; u < c; u++)o[u] = f[u]; for (; u < e; u++)o[u] = 0; return o } function y(n, t) { var i; if (n[0] != t) return 0; for (i = 1; i < n.length; i++)if (n[i]) return 0; return 1 } function st(n, t) { for (var r = n.length < t.length ? n.length : t.length, i = 0; i < r; i++)if (n[i] != t[i]) return 0; if (n.length > t.length) { for (; i < n.length; i++)if (n[i]) return 0 } else for (; i < t.length; i++)if (t[i]) return 0; return 1 } function ht(n) { for (var t = 0; t < n.length; t++)if (n[t]) return 0; return 1 } function fr(n, t) { var f, e, i = ""; if (s6.length != n.length ? s6 = u(n) : r(s6, n), t == -1) { for (f = n.length - 1; f > 0; f--)i += n[f] + ","; i += n[0] } else while (!ht(s6)) e = at(s6, t), i = wt.substring(e, e + 1) + i; return i.length == 0 && (i = "0"), i } function u(n) { return buff = new Array(n.length), r(buff, n), buff } function r(n, t) { for (var r = n.length < t.length ? n.length : t.length, i = 0; i < r; i++)n[i] = t[i]; for (i = r; i < n.length; i++)n[i] = 0 } function f(t, r) { for (var f = r, u = 0; u < t.length; u++)t[u] = f & i, f >>= n } function h(t, r) { var f, o, u, e; for (t[0] += r, o = t.length, u = 0, f = 0; f < o; f++)if (u += t[f], e = 0, u < 0 && (e = -(u >> n), u += e * c), t[f] = u & i, u = (u >> n) - e, !u) return } function ct(t, r) { var u, f = Math.floor(r / n); if (f) { for (u = 0; u < t.length - f; u++)t[u] = t[u + f]; for (; u < t.length; u++)t[u] = 0; r %= n } for (u = 0; u < t.length - 1; u++)t[u] = i & (t[u + 1] << n - r | t[u] >> r); t[u] >>= r } function e(t) { for (var r = 0; r < t.length - 1; r++)t[r] = i & (t[r + 1] << n - 1 | t[r] >> 1); t[r] = t[r] >> 1 | t[r] & c >> 1 } function lt(t, r) { var u, f = Math.floor(r / n); if (f) { for (u = t.length; u >= f; u--)t[u] = t[u - f]; for (; u >= 0; u--)t[u] = 0; r %= n } if (r) { for (u = t.length - 1; u > 0; u--)t[u] = i & (t[u] << r | t[u - 1] >> n - r); t[u] = i & t[u] << r } } function nt(t, r) { var f, o, u, e; if (r) for (o = t.length, u = 0, f = 0; f < o; f++)u += t[f] * r, e = 0, u < 0 && (e = -(u >> n), u += e * c), t[f] = u & i, u = (u >> n) - e } function at(n, t) { for (var r = 0, u, i = n.length - 1; i >= 0; i--)u = r * c + n[i], n[i] = Math.floor(u / t), r = u % t; return r } function ii(t, r, u, f) { var e, o, s, h; for (s = t.length < r.length ? t.length : r.length, h = t.length, o = 0, e = 0; e < s; e++)o += u * t[e] + f * r[e], t[e] = o & i, o >>= n; for (e = s; e < h; e++)o += u * t[e], t[e] = o & i, o >>= n } function vt(t, r, u, f) { var e, o, s, h; for (s = t.length < f + r.length ? t.length : f + r.length, h = t.length, o = 0, e = f; e < s; e++)o += t[e] + u * r[e - f], t[e] = o & i, o >>= n; for (e = s; o && e < h; e++)o += t[e], t[e] = o & i, o >>= n } function li(t, r, u) { var f, e, o, s; for (o = t.length < u + r.length ? t.length : u + r.length, s = t.length, e = 0, f = u; f < o; f++)e += t[f] + r[f - u], t[f] = e & i, e >>= n; for (f = o; e && f < s; f++)e += t[f], t[f] = e & i, e >>= n } function ai(t, r, u) { var f, e, o, s; for (o = t.length < u + r.length ? t.length : u + r.length, s = t.length, e = 0, f = u; f < o; f++)e += t[f] - r[f - u], t[f] = e & i, e >>= n; for (f = o; e && f < s; f++)e += t[f], t[f] = e & i, e >>= n } function o(t, r) { var u, f, e; for (e = t.length < r.length ? t.length : r.length, f = 0, u = 0; u < e; u++)f += t[u] - r[u], t[u] = f & i, f >>= n; for (u = e; f && u < t.length; u++)f += t[u], t[u] = f & i, f >>= n } function b(t, u) { var y = v(t), l = v(u), a, h, f, e, c; if (l && (h = rt(u)), !y && l) { if (s(t, h)) { o(t, h); return } a = p(h, t); r(t, a); tt(t); return } for (c = t.length < u.length ? t.length : u.length, e = 0, f = 0; f < c; f++)e += t[f] + u[f], t[f] = e & i, e >>= n; for (f = c; e && f < t.length; f++)e += t[f], t[f] = e & i, e >>= n } function ri(n, t) { var i; for (ss.length != 2 * n.length && (ss = new Array(2 * n.length)), f(ss, 0), i = 0; i < t.length; i++)t[i] && vt(ss, n, t[i], i); r(n, ss) } function ft(n, t) { s4.length != n.length ? s4 = u(n) : r(s4, n); s5.length != n.length && (s5 = u(n)); ti(s4, t, s5, n) } function yt(n, t, i) { var u; for (s0.length != 2 * n.length && (s0 = new Array(2 * n.length)), f(s0, 0), u = 0; u < t.length; u++)t[u] && vt(s0, n, t[u], u); ft(s0, i); r(n, s0) } function ui(t, u) { for (var e, h, s, c, o = t.length; o > 0 && !t[o - 1]; o--); for (c = o > u.length ? 2 * o : 2 * u.length, s0.length != c && (s0 = new Array(c)), f(s0, 0), e = 0; e < o; e++) { for (s = s0[2 * e] + t[e] * t[e], s0[2 * e] = s & i, s >>= n, h = e + 1; h < o; h++)s = s0[e + h] + 2 * t[e] * t[h] + s, s0[e + h] = s & i, s >>= n; s0[e + o] = s } ft(s0, u); r(t, s0) } function l(n, t) { for (var u, i = n.length; i > 0 && !n[i - 1]; i--); return u = new Array(i + t), r(u, n), u } function et(t, i, e) { var o, s, h, l; if (s7.length != e.length && (s7 = u(e)), (e[0] & 1) == 0) { for (r(s7, t), f(t, 1); !y(i, 0);)i[0] & 1 && yt(t, s7, e), at(i, 2), ui(s7, e); return } for (f(s7, 0), h = e.length; h > 0 && !e[h - 1]; h--); for (l = c - ni(ut(e, c), c), s7[h] = 1, yt(t, s7, e), s3.length != t.length ? s3 = u(t) : r(s3, t), o = i.length - 1; o > 0 & !i[o]; o--); if (i[o] == 0) { f(t, 1); return } for (s = 1 << n - 1; s && !(i[o] & s); s >>= 1); for (; ;) { if (!(s >>= 1)) { if (o-- , o < 0) { pt(t, fi, e, l); return } s = 1 << n - 1 } pt(t, t, e, l); s & i[o] && pt(t, s3, e, l) } } function pt(t, u, e, h) { var p, c, l, a, v, b, y = e.length, w = u.length; for (sa.length != y && (sa = new Array(y)), f(sa, 0); y > 0 && e[y - 1] == 0; y--); for (; w > 0 && u[w - 1] == 0; w--); for (b = sa.length - 1, p = 0; p < y; p++) { for (v = sa[0] + t[p] * u[0], a = (v & i) * h & i, l = v + a * e[0] >> n, v = t[p], c = 1; c < w - 4;)l += sa[c] + a * e[c] + v * u[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c] + v * u[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c] + v * u[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c] + v * u[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c] + v * u[c], sa[c - 1] = l & i, l >>= n, c++; for (; c < w;)l += sa[c] + a * e[c] + v * u[c], sa[c - 1] = l & i, l >>= n, c++; for (; c < y - 4;)l += sa[c] + a * e[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c], sa[c - 1] = l & i, l >>= n, c++ , l += sa[c] + a * e[c], sa[c - 1] = l & i, l >>= n, c++; for (; c < y;)l += sa[c] + a * e[c], sa[c - 1] = l & i, l >>= n, c++; for (; c < b;)l += sa[c], sa[c - 1] = l & i, l >>= n, c++; sa[c - 1] = l & i } s(e, sa) || o(sa, e); r(t, sa) } function rt(n) { var t = u(n); return nt(t, -1), t } function tt(n) { nt(n, -1) } var n = 0, i = 0, c = 0, wt = "", fi = [], vi; t = new Array(0); ss = t; s0 = t; s1 = t; s2 = t; s3 = t; s4 = t; s5 = t; s6 = t; s7 = t; T = t; sa = t; mr_x1 = t; mr_r = t; mr_a = t; eg_v = t; eg_u = t; eg_A = t; eg_B = t; eg_C = t; eg_D = t; md_q1 = t; md_q2 = t; md_q3 = t; md_r = t; md_r1 = t; md_r2 = t; md_tt = t; primes = t; pows = t; s_i = t; s_i2 = t; s_R = t; s_rm = t; s_q = t; s_n1 = t; s_a = t; s_r2 = t; s_n = t; s_b = t; s_d = t; s_x1 = t; s_x2 = t; s_aa = t; rpprb = t; this.ToArray = function (n, t) { var f, e, i = []; if (s6.length != n.length ? s6 = u(n) : r(s6, n), t == -1) for (f = 0; f < n.length; f++)i.push(n[f]); else while (!ht(s6)) e = at(s6, t), i.push(e); return i.length == 0 && i.push(0), i }; this.FromArray = function (n, t, i) { for (var e, o, s, r = n.length, f = g(0, t * r, 0), u = 0; u < r; u++) { if (e = n[u], e >= t || e < 0) break; nt(f, t); h(f, e) } for (r = f.length; r > 0 && !f[r - 1]; r--); for (r = i > r + 1 ? i : r + 1, o = new Array(r), s = r < f.length ? r : f.length, u = 0; u < s; u++)o[u] = f[u]; for (; u < r; u++)o[u] = 0; return o }; vi = s; s = function (n, t) { return vi(n, t) == 1 }; this.ToBytes = function (n) { return this.ToArray(n, 256) }; this.FromBytes = function (n) { return this.FromArray(n, 256, 0) }; this._initialize = function () { for (this.ElementSize = n, this.ElementMask = i, this.ElementRadix = c, c = i + 1, wt = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\'\"+-", n = 0; 1 << n + 1 > 1 << n; n++); n >>= 1; i = (1 << n) - 1; c = i + 1; fi = g(1, 1, 1); this.Add = ot; this.AddInt = bi; this.ToString = fr; this.BitCount = oi; this.Clone = u; this.Equals = st; this.EqualsInt = y; this.Expand = d; this.GetPrimes = bt; this.GCD = ir; this.MoreThan = s; this.MoreThanShitf = hi; this.FromInt = g; this.InverseMod = gi; this.InverseModInt = ni; this.IsZero = ht; this.IsProbPrime = kt; this.IsPronPrimeInt = ei; this.Mod = wi; this.ModInt = ut; this.Multiply = ki; this.MultiplyMod = nr; this.IsNegative = v; this.PowMod = di; this.NewBigInt = tr; this.NewPrime = yi; this.NewProbPrime = pi; this.FromString = ur; this.Subtract = p; this.Trim = l; this.Negate = rt; this.Negate_ = tt; this.Add_ = b; this.AddInt_ = h; this.Clone_ = r; this.CloneInt_ = f; this.GCD_ = gt; this.InverseMod_ = si; this.Mod_ = ft; this.Multiply_ = ri; this.MultiplyMod_ = yt; this.PowMod_ = et; this.NewBigInt_ = it; this.NewPrime_ = dt; this.Subtract_ = o; this.AddShift_ = li; this.Carry_ = ci; this.Divide_ = ti; this.DivideInt_ = at; this.eGCD_ = rr; this.Halve_ = e; this.LeftShift_ = lt; this.LinComb_ = ii; this.LinCombShift_ = vt; this.MontMultiply_ = pt; this.MultiplyInt_ = nt; this.RightShift_ = ct; this.SquareMod_ = ui; this.SubtractShift_ = ai }; this._initialize.apply(this, arguments) }; System.BigInt.Utils = new System.BigInt._Utils; System.BigInt.Add = function (n, t) { var i = new System.BigInt; return i.digits = System.BigInt.Utils.Add(n.digits, t.digits), i }; System.BigInt.Divide = function (n, t, i, r) { i.digits = new Array(n.digits.length); r.digits = new Array(n.digits.length); System.BigInt.Utils.Divide_(n.digits, t.digits, i.digits, r.digits) }; System.BigInt.Negate = function (n) { System.BigInt.Utils.Negate_(n.digits) }; System.BigInt.Multiply = function (n, t) { var i = new System.BigInt; return i.digits = System.BigInt.Utils.Multiply(n.digits, t.digits), i }; System.BigInt.Subtract = function (n, t) { var i = new System.BigInt; return i.digits = System.BigInt.Utils.Subtract(n.digits, t.digits), i }; System.Type.RegisterNamespace("System.Security.Cryptography"); System.Security.Cryptography.SHA1 = function () { function n(n, t) { var i = (n & 65535) + (t & 65535), r = (n >> 16) + (t >> 16) + (i >> 16); return r << 16 | i & 65535 } function t(n, t) { return n << t | n >>> 32 - t } function i(n, t, i, r) { return n < 20 ? r ^ t & (i ^ r) : n < 40 ? t ^ i ^ r : n < 60 ? t & i | r & (t | i) : t ^ i ^ r } function r(n) { return n < 20 ? 1518500249 : n < 40 ? 1859775393 : n < 60 ? 2400959708 : 3395469782 } this.Name = "SHA1"; this.chrsz = 8; this._buffer = new System.Byte; this._count = 0; this._expandedBuffer = []; this._stateSHA1 = []; this.ComputeHashAsHex = function (n) { var t = this.ComputeHash(n); return System.BitConverter.ToString(t, "") }; this.ComputeHashAsBase64 = function (n) { var t = this.ComputeHash(n); return System.Convert.ToBase64String(t, !1) }; this._HashData = function (n, t, i) { var u = i, f = t, r = this._count & 63; for (this._count += u, r > 0 && r + u >= 64 && (System.Buffer.BlockCopy(n, f, this._buffer, r, 64 - r), f += 64 - r, u -= 64 - r, this.SHATransform(this._expandedBuffer, this._stateSHA1, this._buffer), r = 0); u >= 64;)System.Buffer.BlockCopy(n, f, this._buffer, 0, 64), f += 64, u -= 64, this.SHATransform(this._expandedBuffer, this._stateSHA1, this._buffer); u > 0 && System.Buffer.BlockCopy(n, f, this._buffer, r, u) }; this.HashCore = function (n, t, i) { this._HashData(n, t, i) }; this._EndHash = function () { var u = new System.Byte(20), t = 64 - this._count & 63, n, f, i, r; for (t <= 8 && (t += 64), n = new System.Byte(t), n[0] = 128, f = this._count * 8, i = f, r = 1; r <= 8; r++)n[t - r] = i & 255, i = i >> 8; return this._HashData(n, 0, n.length), this.DWORDToBigEndian(u, this._stateSHA1, 5), this.HashValue = u, u }; this.HashFinal = function () { return this._EndHash() }; this.SHATransform = function (u, f, e) { var h, o, s; for (this.DWORDFromBigEndian(u, 16, e), this.SHAExpand(u), h = new Array(5), o = 0, o = 0; o < 5; o++)h[4 - o] = f[o]; for (o = 0; o < 80; o += 5)for (s = 0; s < 5; s++) { var c = i(o, h[(s + 3) % 5], h[(s + 2) % 5], h[(s + 1) % 5]), l = n(t(h[(s + 4) % 5], 5), c), a = u[o + (s + 0) % 5], v = n(l, a), y = n(v, r(o)), p = h[(s + 0) % 5], w = n(y, p); h[(s + 0) % 5] = w; h[(s + 3) % 5] = t(h[(s + 3) % 5], 30) } for (o = 0; o < 5; o++)f[o] = n(f[o], h[4 - o]) }; this.SHAExpand = function (n) { for (var i = 16; i < 80; i++)n[i] = t(n[i - 3] ^ n[i - 8] ^ n[i - 14] ^ n[i - 16], 1) }; this.DWORDFromBigEndian = function (n, t, i) { for (var f, u = 0, r = 0; u < t; r += 4)f = i[r] << 24 | i[r + 1] << 16 | i[r + 2] << 8 | i[r + 3], n[u] = f, u++ }; this.DWORDToBigEndian = function (n, t, i) { for (var r = 0, u = 0; r < i; u += 4)n[u] = t[r] >> 24 & 255, n[u + 1] = t[r] >> 16 & 255, n[u + 2] = t[r] >> 8 & 255, n[u + 3] = t[r] & 255, r++ }; this.Initialize = function () { this.InitializeState(); System.Array.Clear(this._buffer, 0, this._buffer.length); System.Array.Clear(this._expandedBuffer, 0, this._expandedBuffer.length) }; this.InitializeState = function () { this._count = 0; this._stateSHA1[0] = 1732584193; this._stateSHA1[1] = 4023233417; this._stateSHA1[2] = 2562383102; this._stateSHA1[3] = 271733878; this._stateSHA1[4] = 3285377520 }; this._initialize = function () { var t = new System.Security.Cryptography.HashAlgorithm; for (var n in t) typeof this[n] == "undefined" && (this[n] = t[n]); this.HashSizeValue = 160; this.HashSize = 160; this._stateSHA1 = new System.Byte(5); this._buffer = new System.Byte(64); this._expandedBuffer = new System.Byte(80); this.InitializeState() }; this._initialize.apply(this, arguments) }; System.Security.Cryptography.SHA1CryptoServiceProvider = System.Security.Cryptography.SHA1; System.Type.RegisterNamespace("System.Security.Cryptography"); System.Security.Cryptography.CryptographicException = function (n) { this.message = n; var t = Error.create(this.message, { name: this.GetType().FullName }); return t.popStackFrame(), t }; System.Type.RegisterClass("System.Security.Cryptography.CryptographicException"); System.Security.Cryptography.CryptographicException = function (n) { this.message = n; this.toString = function () { return this.name + ": " + this.message }; var t = Error.create(this.message, { name: this.GetType().FullName }); return t.popStackFrame(), t }; System.Type.RegisterClass("System.Security.Cryptography.CryptographicException"); System.Security.Cryptography.Rfc2898DeriveBytes = function () { this.IterationCount = 1e3; this.Password; this.Salt; this.Hmac; this.HmacLength = 20; var t, n = 0, i = 0; this.F = function (n, t, i) { var r = new Array(n.length + 4), e, o, f, s, h, u; for (System.Buffer.BlockCopy(n, 0, r, 0, n.length), e = 0; e < 4; e++)r[n.length + e] = 0; for (o = System.BitConverter.GetBytes(i), System.Array.Reverse(o, 0, 4), System.Buffer.BlockCopy(o, 0, r, n.length, 4), f = this.Hmac.ComputeHash(this.Password, r), r = f, s = 1; s < t; s++) { for (h = this.Hmac.ComputeHash(this.Password, r), u = 0; u < this.HmacLength; u++)f[u] = (f[u] ^ h[u]) & 255; r = h } return f }; this.GetBytes = function (r) { var s = Math.floor(r / this.HmacLength), h = Math.floor(r % this.HmacLength), o, c; h != 0 && s++; var e = new Array(r), f = 0, u = 0; if (n > 0) { if (u = Math.min(this.HmacLength - n, r), System.Buffer.BlockCopy(t, n, e, 0, u), u >= r) return e; n = 0; f = (f + u) % r; h = r - f } for (o = 1; o <= s; o++)if (t = this.F(this.Salt, this.IterationCount, ++i), u = o == s ? h : this.HmacLength, System.Buffer.BlockCopy(t, n, e, f, u), c = f, f = (f + n + u) % r, n = u == this.HmacLength ? 0 : u, c + u >= r) return e; return e }; this.Initialize = function () { var n = arguments[0], t = arguments[1], i = arguments[2]; typeof n == "string" && (n = System.Text.Encoding.UTF8.GetBytes(n)); typeof t == "string" && (t = System.Text.Encoding.UTF8.GetBytes(t)); this.Password = n; this.Salt = t; i && (this.IterationCount = i); this.Hmac = new System.Security.Cryptography.HMACSHA1 }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Security.Cryptography.Rfc2898DeriveBytes"); System.Security.Cryptography.ICryptoTransform = function () { function h(i, r) { var f; u ? (f = t.Encrypt(t.Key, i, System.Security.Cryptography.CipherMode.ECB), System.Buffer.BlockCopy(f, 0, r, 0, n)) : (f = t.Decrypt(t.Key, i, System.Security.Cryptography.CipherMode.ECB), System.Buffer.BlockCopy(f, 0, r, 0, n)) } function w(t, r) { var e = 0; if (u) { for (e = 0; e < n; e++)i[e] ^= t[e]; h(i, r); System.Buffer.BlockCopy(r, 0, i, 0, n) } else { for (System.Buffer.BlockCopy(t, 0, f, 0, n), h(t, r), e = 0; e < n; e++)r[e] ^= i[e]; System.Buffer.BlockCopy(f, 0, i, 0, n) } } function b(t, e) { var o = 0, s = 0; if (u) for (o = 0; o < l; o++) { for (h(i, f), s = 0; s < r; s++)e[s + o] = f[s] ^ t[s + o]; System.Buffer.BlockCopy(i, r, i, 0, n - r); System.Buffer.BlockCopy(e, o, i, n - r, r) } else for (o = 0; o < l; o++)for (u = !0, h(i, f), u = !1, System.Buffer.BlockCopy(i, r, i, 0, n - r), System.Buffer.BlockCopy(t, o, i, n - r, r), s = 0; s < r; s++)e[s + o] = f[s] ^ t[s + o] } function k() { throw "OFB isn't supported"; } function d() { throw "CTS  isn't supported"; } function v(n, t, i) { if (!n) throw "inputBuffer is can't be null"; if (t < 0) throw "inputOffset is out of range"; if (i < 0) throw "inputCount is out of range"; if (t > n.length - i) throw "inputBuffer is out of range (overflow)"; } function y() { return !u && t.Padding != System.Security.Cryptography.PaddingMode.Zeros && t.Padding != System.Security.Cryptography.PaddingMode.None } function p(n, t, i, r) { c == null && (c = new System.Security.Cryptography.RNGCryptoServiceProvider); var u = new System.Byte(i); r ? c.GetBytes(u) : c.GetNonZeroBytes(u); System.Buffer.BlockCopy(u, 0, n, t, i) } var t = null, u = !1, n = 0, i = [], f = [], o = [], e = [], r = 0, l = 0, a = !1, s = !1, c; this.InputBlockSize = 0; this.OutputBlockSize = 0; this.CanTransformMultipleBlocks = !0; this.CanReuseTransform = !1; this._Transform = function (n, i) { switch (t.Mode) { case System.Security.Cryptography.CipherMode.ECB: h(n, i); break; case System.Security.Cryptography.CipherMode.CBC: w(n, i); break; case System.Security.Cryptography.CipherMode.CFB: b(n, i); break; case System.Security.Cryptography.CipherMode.OFB: k(n, i); break; case System.Security.Cryptography.CipherMode.CTS: d(n, i); break; default: var r = "Unkown CipherMode" + t.Mode; throw r; } }; this.TransformBlock = function (n, t, i, r, u) { if (a) throw new System.ObjectDisposedException("Object is disposed."); if (v(n, t, i), r == null) throw new System.ArgumentNullException("outputBuffer"); if (u < 0) throw new System.ArgumentOutOfRangeException("outputOffset", "< 0"); if (u > r.length - i) throw new System.ArgumentException("outputBuffer", "Overflow"); return this._InternalTransformBlock(n, t, i, r, u) }; this._InternalTransformBlock = function (t, i, r, u, f) { var l = i, h = 0, c, a; if (r != n) { if (r % n != 0) throw new System.Security.Cryptography.CryptographicException("Invalid input block size."); h = r / n } else h = 1; for (y() && h-- , c = 0, s && (this._Transform(o, e), System.Buffer.BlockCopy(e, 0, u, f, n), f += n, c += n, s = !1), a = 0; a < h; a++)System.Buffer.BlockCopy(t, l, o, 0, n), this._Transform(o, e), System.Buffer.BlockCopy(e, 0, u, f, n), l += n, f += n, c += n; return y() && (System.Buffer.BlockCopy(t, l, o, 0, n), s = !0), c }; this._Padding = function (i, r, u) { var e = n - u, h = e > 0 ? e : n, f = new System.Byte(h), o = 1, a = [], s = 0, c, v, l; switch (t.Padding) { case System.Security.Cryptography.PaddingMode.None: if (e != 0) throw new System.Security.Cryptography.CryptographicException("Invalid block length"); case System.Security.Cryptography.PaddingMode.Zeros: for (s = 0; s < f.length; s++)f[s] = 0; e == 0 && (o = 2); break; case System.Security.Cryptography.PaddingMode.ANSIX923: f[f.length - 1] = h; e == 0 && (o = 2); break; case System.Security.Cryptography.PaddingMode.ISO10126: p(f, 0, f.length - 1, !0); f[f.length - 1] = h; e == 0 && (o = 2); break; case System.Security.Cryptography.PaddingMode.PKCS7: for (s = 0; s < f.length; s++)f[s] = h; e == 0 && (o = 2); break; case System.Security.Cryptography.PaddingMode.RsaEsPkcs: p(f, 1, f.length - 2, !1); f[0] = 0; f[f.length - 2] = 2; f[f.length - 1] = 0; e == 0 && (o = 2); break; case System.Security.Cryptography.PaddingMode.RsaEsOaep: var y = new System.Security.Cryptography.PKCS1Padding, w = new System.Security.Cryptography.PKCS1MaskGenerationMethod, b = new System.Security.Cryptography.SHA1CryptoServiceProvider, k = new System.Security.Cryptography.RNGCryptoServiceProvider; a = y.RsaEsOaepEncrypt(t, b, w, k, i) }return c = new System.Byte(n * o), v = new System.Byte(n * o), a.length == 0 ? (System.Buffer.BlockCopy(i, r, c, 0, u), (e > 0 || e == 0 && o == 2) && System.Buffer.BlockCopy(f, 0, c, u, h)) : System.Buffer.BlockCopy(a, r, c, 0, u + h), l = {}, l.blocksCount = o, l.iBuffer = c, l.oBuffer = v, l }; this._PaddingRemove = function (i) { var r = i.length, u = 0, f = 0, e; switch (t.Padding) { case System.Security.Cryptography.PaddingMode.ANSIX923: for (u = r > 0 ? i[r - 1] : 0, (u == 0 || u > n) && System.Security.Cryptography.ThrowBadPaddingException(t.Padding, u, -1), f = u; f > 0; f--)i[r - 1 - f] != 0 && System.Security.Cryptography.ThrowBadPaddingException(t.Padding, -1, f); r -= u; break; case System.Security.Cryptography.PaddingMode.ISO10126: u = r > 0 ? i[r - 1] : 0; (u == 0 || u > n) && System.Security.Cryptography.ThrowBadPaddingException(t.Padding, u, -1); r -= u; break; case System.Security.Cryptography.PaddingMode.PKCS7: for (u = r > 0 ? i[r - 1] : 0, (u == 0 || u > n) && (Trace.Write(u + ", " + n), System.Security.Cryptography.ThrowBadPaddingException(t.Padding, u, -1)), f = u - 1; f > 0; f--)i[r - 1 - f] != u && System.Security.Cryptography.ThrowBadPaddingException(t.Padding, -1, f); r -= u; break; case System.Security.Cryptography.PaddingMode.RsaEsPkcs: for (i[r - 1] != 0 && System.Security.Cryptography.ThrowBadPaddingException(t.Padding, -1, r - 1), i[r - 2] != 2 && System.Security.Cryptography.ThrowBadPaddingException(t.Padding, -1, r - 2), f = r - 3; f > 0; f--)if (i[f] == 0) { r = f; break } break; case System.Security.Cryptography.PaddingMode.RsaEsOaep: var o = new System.Security.Cryptography.PKCS1Padding, s = new System.Security.Cryptography.PKCS1MaskGenerationMethod, h = new System.Security.Cryptography.SHA1CryptoServiceProvider; return o.RsaEsOaepDecrypt(t, h, s, i) }return r > 0 ? (e = new System.Byte(r), System.Buffer.BlockCopy(i, 0, e, 0, r), System.Array.Clear(i, 0, i.length), e) : new System.Byte(0) }; this._FinalEncrypt = function (t, i, r) { for (var e, u = this._Padding(t, i, r), s = u.blocksCount, h = u.iBuffer, o = u.oBuffer, f = 0; f < s; f++)e = f * n, this._InternalTransformBlock(h, e, n, o, e); return o }; this._FinalDecrypt = function (t, i, r) { var h, f, u, c; if (r % n > 0) throw new System.Security.Cryptography.CryptographicException("Invalid input block size."); for (h = r, s && (h += n), f = new System.Byte(h), u = 0; r > 0;)c = this._InternalTransformBlock(t, i, n, f, u), i += n, u += c, r -= n; return s && (this._Transform(o, e), System.Buffer.BlockCopy(e, 0, f, u, n), u += n, s = !1), this._PaddingRemove(f, i, r) }; this.TransformFinalBlock = function (n, t, i) { if (a) throw new ObjectDisposedException("Object is disposed"); return v(n, t, i), u ? this._FinalEncrypt(n, t, i) : this._FinalDecrypt(n, t, i) }; this.Initialize = function (s, h) { t = s; u = h; t && (n = t.BlockSize >> 3, this.InputBlockSize = n, this.OutputBlockSize = n, i = new System.Byte(n), System.Buffer.BlockCopy(t.IV, 0, i, 0, Math.min(n, t.IV.length)), f = new System.Byte(n), r = t.FeedbackSize >> 3, r != 0 && (l = n / r), o = new System.Byte(n), e = new System.Byte(n)) }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Security.Cryptography.ICryptoTransform"); System.Security.Cryptography.RNGCryptoServiceProvider = function () { var n; this.GetBytes = function (t) { for (var r = t.length, i = 0; i < r; i++)t[i] = n.Next(0, 256) }; this.GetNonZeroBytes = function (t) { for (var r = t.length, i = 0; i < r; i++)t[i] = n.Next(1, 256) }; this.Dispose = function () { m_disposed = !0 }; this.Initialize = function () { n = new System.Random }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Security.Cryptography.RNGCryptoServiceProvider"); System.Security.Cryptography.CryptoStream = function (n) { var r, t, a, s = [], y = !1, p = !1, i = 0, v = !1, f = [], l = 0, h = [], e = 0, o = 0, u = [], c = 0; this.Read = function (n, i, s) { var w = 0, a, y, p; if (s == 0 || e == o && v) return w; for (f == null && (h = new System.Byte(t.OutputBlockSize << 2), e = 0, o = 0, f = new System.Byte(t.InputBlockSize), l = r.Read(f, 0, f.length)); s > 0;)a = o - e, a < t.InputBlockSize && (y = 0, c = r.Read(u, 0, u.length), v = c < t.InputBlockSize, v ? (c > 0 && (y = t.TransformBlock(f, 0, f.length, h, o), System.Buffer.BlockCopy(u, 0, f, 0, c), l = c, a += y, o += y), p = t.TransformFinalBlock(f, 0, l), y = p.length, System.Buffer.BlockCopy(p, 0, h, o, p.length), System.Array.Clear(p, 0, p.length)) : (y = t.TransformBlock(f, 0, f.length, h, o), System.Buffer.BlockCopy(u, 0, f, 0, c), l = c), a += y, o += y), e > t.InputBlockSize && (System.Buffer.BlockCopy(h, e, h, 0, a), o -= e, e = 0), a = s < a ? s : a, a > 0 && (System.Buffer.BlockCopy(h, e, n, i, a), e += a, w += a, i += a, s -= a), (a != t.InputBlockSize && l != t.InputBlockSize || v) && (s = 0); return w }; this.Write = function (n, f, e) { var h, l, o, a, c, v; for (i > 0 && i != t.InputBlockSize && (h = t.InputBlockSize - i, h = e < h ? e : h, System.Buffer.BlockCopy(n, f, u, i, h), i += h, f += h, e -= h), l = f, o = 0; e > 0;)i == t.InputBlockSize && (o = t.TransformBlock(u, 0, i, s, 0), r.Write(s, 0, o), i = 0), t.CanTransformMultipleBlocks ? (a = Math.floor((i + e) / t.InputBlockSize), c = a * t.InputBlockSize, a > 0 ? (v = new System.Byte(c), o = t.TransformBlock(n, f, c, v, 0), r.Write(v, 0, o), i = e - c, System.Buffer.BlockCopy(n, f + c, u, 0, i)) : (System.Buffer.BlockCopy(n, f, u, i, e), i += e), e = 0) : (o = Math.min(t.InputBlockSize - i, e), System.Buffer.BlockCopy(n, l, u, i, o), l += o, i += o, e -= o) }; this.Flush = function () { r != null && r.Flush() }; this.FlushFinalBlock = function () { p = !0; var n = t.TransformFinalBlock(u, 0, i); r != null && (r.Write(n, 0, n.length), r.GetType().FullName == "System.Security.Cryptography.CryptoStream" && r.FlushFinalBlock(), r.Flush()); System.Array.Clear(n, 0, n.length) }; this.ToArray = function () { return n.ToArray() }; this.Close = function () { p || a != System.Security.Cryptography.CryptoStreamMode.Write || this.FlushFinalBlock(); r != null && r.Close() }; this.Dispose = function () { y || (y = !0, u != null && System.Array.Clear(u, 0, u.length), s != null && System.Array.Clear(s, 0, s.length), disposing && (r = null, u = null, s = null)) }; this.Initialize = function () { r = arguments[0]; t = arguments[1]; a = arguments[2]; y = !1; t && (u = new System.Byte(t.InputBlockSize), a == System.Security.Cryptography.CryptoStreamMode.Read ? s = new System.Byte(t.InputBlockSize) : a == System.Security.Cryptography.CryptoStreamMode.Write && (s = new System.Byte(t.OutputBlockSize))) }; this.Initialize.apply(this, arguments) }; System.Type.RegisterClass("System.Security.Cryptography.CryptoStream"); System.Security.Cryptography.HashAlgorithm = function () { this.CanReuseTransform = !0; this.CanTransformMultipleBlocks = !0; this.InputBlockSize = 1; this.OutputBlockSize = 1; this.HashSizeValue = 0; this.HashValue = new System.Byte; this.State = 0; this.HashSize = this.HashSizeValue; this._ComputeHash1 = function (n) { return this._ComputeHash2(n, 0, n.length) }; this._ComputeHash2 = function (n, t, i) { this.HashCore(n, t, i); this.HashValue = this.HashFinal(); var r = this.Hash(); return this.Initialize(), r }; this.ComputeHash = function () { var n, t; return arguments.length == 1 ? (n = arguments[0], typeof n == "string" && (n = System.Text.Encoding.UTF8.GetBytes(n)), t = new Array(0), t[0] = n, this._ComputeHash1.apply(this, t)) : arguments.length == 3 ? this._ComputeHash2.apply(this, arguments) : void 0 }; this.HashCore = function () { }; this.HashFinal = function () { }; this.Initialize = function () { }; this.TransformBlock = function (n, t, i, r, u) { return this.State = 1, this.HashCore(n, t, i), r != null && (n != r || t != u) && System.Buffer.BlockCopy(n, t, r, u, i), i }; this.TransformFinalBlock = function (n, t, i) { this.HashCore(n, t, i); this.HashValue = this.HashFinal(); var r = new System.Byte(i); return i != 0 && System.Buffer.BlockCopy(n, t, r, 0, i), this.State = 0, r }; this.Hash = function () { return this.HashValue.Clone() } }; System.Type.RegisterClass("System.Security.Cryptography.HashAlgorithm"); System.Security.Cryptography.HashAlgorithm.Create = function (n) { return new System.Security.Cryptography[n] }; System.Security.Cryptography.PKCS1MaskGenerationMethod = function () { function n(n, t) { var i = System.BitConverter.GetBytesFromInt32Be(n); System.Buffer.BlockCopy(i, 0, t, 0, i.length) } this.GenerateMask = function (t, i) { for (var f, e = new System.Security.Cryptography.SHA1CryptoServiceProvider, o = new System.Byte(4), r = new System.Byte(i), s = 0, u = 0; u < r.length; u += 20)n(s++, o), e.TransformBlock(t, 0, t.length, t, 0), e.TransformFinalBlock(o, 0, 4), f = e.HashValue, e.Initialize(), r.Length - u > f.length ? System.Buffer.BlockCopy(f, 0, r, u, f.length) : System.Buffer.BlockCopy(f, 0, r, u, r.length - u); return r } }; System.Type.RegisterClass("System.Security.Cryptography.PKCS1MaskGenerationMethod"); System.Security.Cryptography.PKCS1Padding = function () { this.RsaEsOaepEncrypt = function (n, t, i, r, u) { var k = n.ExportParameters(!1), v = u.Clone(), o, h, w, c, b, l, a; System.Array.Reverse(v); for (var d = System.Text.Encoding.UTF8.GetBytes(""), e = t.HashSize / 8, y = v.length, p = k.Modulus.length, g = t.ComputeHash(d), nt = p - y - 2 * e - 2, s = new Array(nt), f = 0, f = 0; f < s.length; f++)s[f] = 0; for (o = new Array(e + s.length + 1 + y), System.Buffer.BlockCopy(g, 0, o, 0, e), System.Buffer.BlockCopy(s, 0, o, e, s.length), o[e + s.length] = 1, System.Buffer.BlockCopy(v, 0, o, e + s.length + 1, y), h = new Array(e), r.GetBytes(h), w = i.GenerateMask(h, p - e - 1), c = new Array(o.length), f = 0; f < o.length; f++)c[f] = o[f] ^ w[f]; for (b = i.GenerateMask(c, e), l = new Array(h.length), f = 0; f < h.length; f++)l[f] = h[f] ^ b[f]; return a = new Array(1 + l.length + c.length), a[0] = 0, System.Buffer.BlockCopy(l, 0, a, 1, l.length), System.Buffer.BlockCopy(c, 0, a, 1 + l.length, c.length), System.Array.Reverse(a), a }; this.RsaEsOaepDecrypt = function (n, t, i, r) { var y = n.ExportParameters(!0), h = r, o = new Array(h.length), l, e, s; System.Buffer.BlockCopy(h, 0, o, 0, h.length); System.Array.Reverse(o); for (var f = t.HashSize / 8, c = y.Modulus.length, p = o.slice(1, f + 1), a = o.slice(f + 1, c), w = i.GenerateMask(a, f), v = new Array(f), u = 0, u = 0; u < f; u++)v[u] = p[u] ^ w[u]; for (l = i.GenerateMask(v, c - f - 1), e = new Array(l.length), u = 0; u < e.length; u++)e[u] = a[u] ^ l[u]; for (s = [], u = f; u < c; u++)if (e[u] == 1) { s = e.slice(u + 1, e.length); break } return System.Array.Reverse(s), s } }; System.Type.RegisterClass("System.Security.Cryptography.PKCS1Padding"); System.Security.Cryptography.Utils = {}; System.Security.Cryptography.Utils.RsaOaepDecrypt = function () { }; System.Security.Cryptography.Utils.PKCS1Padding = System.Security.Cryptography.PKCS1Padding.prototype.RsaPkcs1Padding; System.Security.Cryptography.CipherMode = function () { }; System.Security.Cryptography.CipherMode.prototype = { CBC: 1, ECB: 2, OFB: 3, CFB: 4, CTS: 5 }; System.Type.RegisterEnum("System.Security.Cryptography.CipherMode"); System.Security.Cryptography.PaddingMode = function () { }; System.Security.Cryptography.PaddingMode.prototype = { None: 1, PKCS7: 2, Zeros: 3, ANSIX923: 4, ISO10126: 5, RsaEsPkcs: 6, RsaEsOaep: 7 }; System.Type.RegisterEnum("System.Security.Cryptography.PaddingMode"); System.Security.Cryptography.CryptoStreamMode = function () { }; System.Security.Cryptography.CryptoStreamMode.prototype = { Read: 0, Write: 1 }; System.Type.RegisterEnum("System.Security.Cryptography.CryptoStreamMode"); System.Type.RegisterNamespace("System.Security.Cryptography"); System.Security.Cryptography.HMACSHA1 = function () { this.Name = "HMACSHA1"; this.Algorithm; this.Key; this.HashSize = 160; this.HashName = "SHA1"; this.ComputeHash = function (n, t) { return t || (t = n, n = this.Key), typeof n == "string" && (n = System.Text.Encoding.UTF8.GetBytes(n)), typeof t == "string" && (t = System.Text.Encoding.UTF8.GetBytes(t)), this._ComputeHash(n, t) }; this.ComputeHashAsHex = function (n, t) { var i = this.ComputeHash(n, t); return System.BitConverter.ToString(i, "") }; this.ComputeHashAsBase64 = function (n, t) { var i = this.ComputeHash(n, t); return System.Convert.ToBase64String(i, !1) }; this._ComputeHash = function (n, t) { var r, u, i, f; for (t || (t = n, n = this.Key), n.length > 64 && (n = this.Algorithm.ComputeHash(n)), r = new Array(64), u = new Array(64), i = 0; i < 64; i++)r[i] = n[i] ^ 54, u[i] = n[i] ^ 92; return f = this.Algorithm.ComputeHash(r.concat(t)), this.Algorithm.ComputeHash(u.concat(f)) }; this.Initialize = function () { this.Algorithm = new System.Security.Cryptography.SHA1; this.Key = arguments[0] }; this.Initialize.apply(this, arguments) }; System.Type.RegisterNamespace("System.Security.Cryptography"); System.Security.Cryptography.RSAManaged = function () { }; System.Security.Cryptography.RSAParameters = function () { this.Exponent = []; this.Modulus = []; this.D = []; this.DP = []; this.DQ = []; this.InverseQ = []; this.P = []; this.Q = []; this.Clone = function (n) { var t = new System.Security.Cryptography.RSAParameters; return System.Array.Copy(this.Exponent, t.Exponent, this.Exponent.length), System.Array.Copy(this.Modulus, t.Modulus, this.Modulus.length), n && (this.D && System.Array.Copy(this.D, t.D, this.D.length), this.DP && System.Array.Copy(this.DP, t.DP, this.DP.length), this.DQ && System.Array.Copy(this.DQ, t.DQ, this.DQ.length), this.InverseQ && System.Array.Copy(this.InverseQ, t.InverseQ, this.InverseQ.length), this.P && System.Array.Copy(this.P, t.P, this.P.length), this.Q && System.Array.Copy(this.Q, t.Q, this.Q.length)), t }; this.Initialize = function () { }; this.Initialize.apply(this, arguments) }; System.Security.Cryptography.RSACryptoServiceProvider = function () { function r() { return i == null && (i = e.call(this, !0)), i } function e(t) { var r, u, o, f, s, e, h, c; for (f = n.FromString("10001", 16, 0), e = this.KeySize + 1 >> 1, h = this.KeySize - e; ;)if (r = t ? n.NewPrime(e) : n.NewProbPrime(e), !n.EqualsInt(n.Mod(r, f), 1)) break; for (; ;) { for (; ;)if (u = t ? n.NewPrime(h) : n.NewProbPrime(h), !n.Equals(r, u) && !n.EqualsInt(n.Mod(u, f), 1)) break; if (o = n.Multiply(r, u), n.BitCount(o) == this.KeySize) break; n.MoreThan(u, r) && (r = u) } n.MoreThan(u, r) && (c = r, r = u, u = c); var l = n.AddInt(r, -1), a = n.AddInt(u, -1), v = n.Multiply(l, a); s = n.InverseMod(f, v); s || Trace.Write("ERROR: e isn't invertible. Try a different prime e. ****"); var y = n.InverseMod(u, r), p = n.InverseMod(f, l), w = n.InverseMod(f, a), i = new System.Security.Cryptography.RSAParameters; return i.Exponent = n.ToBytes(f), i.Modulus = n.ToBytes(o), i.D = n.ToBytes(s), i.P = n.ToBytes(r), i.Q = n.ToBytes(u), i.DP = n.ToBytes(p), i.DQ = n.ToBytes(w), i.InverseQ = n.ToBytes(y), System.Array.Reverse(i.Exponent), System.Array.Reverse(i.Modulus), System.Array.Reverse(i.D), System.Array.Reverse(i.P), System.Array.Reverse(i.Q), System.Array.Reverse(i.DP), System.Array.Reverse(i.DQ), System.Array.Reverse(i.InverseQ), i } function t(n, t) { var t = new RegExp("<" + t + ">(.*?)<\/" + t + ">", "gi"), i = n.match(t), r, u; return i ? (r = i[0].replace(t, "$1"), u = System.Convert.FromBase64String(r), u) : null } function u(n, t, i) { this.Padding = t ? System.Security.Cryptography.PaddingMode.RsaEsOaep : System.Security.Cryptography.PaddingMode.RsaEsPkcs; this.Mode = System.Security.Cryptography.CipherMode.ECB; var r = new System.Security.Cryptography.ICryptoTransform(this, !0); return i ? r._Padding(n, 0, n.length).iBuffer : r._PaddingRemove(n, 0, n.length) } function o(t, i) { var f = t.Clone(), u; System.Array.Reverse(f); var e = n.FromBytes(i.Exponent), o = n.FromBytes(i.Modulus), l = n.FromBytes(i.D), s = n.FromBytes(f), h = n.PowMod(s, e, o), r = n.ToBytes(h), c = this.KeySize / 8; for (u = r.length; u < c; u++)r.push(0); return System.Array.Reverse(r), r } function s(n, t, i) { for (var h, c, f = this.KeySize / 8 - (i ? 41 : 11), e = [], s, r = 0; r < t.length / f; r++)s = t.slice(r * f, (r + 1) * f), System.Array.Reverse(s), h = u.call(this, s, i, !0), c = o.call(this, h, n), e = e.concat(c); return e } function h(t, i) { var k = n.FromBytes(i.Exponent), s = n.FromBytes(i.Modulus), a = n.FromBytes(i.D), f = n.FromBytes(t), r, u, l, o; if (1) { var v = n.FromBytes(i.DP), y = n.FromBytes(i.DQ), p = n.FromBytes(i.InverseQ), e = n.FromBytes(i.P), h = n.FromBytes(i.Q), w = n.PowMod(f, v, e), c = n.PowMod(f, y, h), b = n.MultiplyMod(p, n.Subtract(n.Add(w, e), c), e); r = n.Add(c, n.Multiply(b, h)) } else r = n.PowMod(f, a, s); for (n.MoreThan(s, r) || Trace.Write("ERROR: The message m must be less than p*q"), u = n.ToBytes(r), l = this.KeySize / 8, o = u.length; o < l; o++)u.push(0); return u } function c(n, t, i) { for (var r, s, e = this.KeySize / 8, o = [], f = 0; f < t.length / e; f++)r = t.slice(f * e, (f + 1) * e), r = h.call(this, r, n), s = u.call(this, r, i, !1), System.Array.Reverse(s), o = o.concat(s); return o } this.KeySize = 512; this.BlockSize = 512; this.FeedbackSize = 512; this.IV = []; this.HashSize = 160; var i = null, f = null, n = System.BigInt.Utils; this.ImportParameters = function (n) { i = n.Clone(!0); f = null; this.KeySize = i.Modulus.length * 8; this.BlockSize = this.KeySize; this.FeedbackSize = this.KeySize }; this.ExportParameters = function (n) { var t = r.call(this); return t.Clone(n) }; this.FromXmlString = function (n) { var i = new System.Security.Cryptography.RSAParameters, r = new RegExp("\\s", "gi"); n = n.replace(r, ""); i.Exponent = t(n, "Exponent"); i.Modulus = t(n, "Modulus"); i.D = t(n, "D"); i.DP = t(n, "DP"); i.DQ = t(n, "DQ"); i.InverseQ = t(n, "InverseQ"); i.P = t(n, "P"); i.Q = t(n, "Q"); this.ImportParameters(i) }; this.ToXmlString = function (n) { var i = this.ExportParameters(n), t = new System.Text.StringBuilder; return t.Append("<RSAKeyValue>"), t.Append("<Modulus>" + System.Convert.ToBase64String(i.Modulus) + "<\/Modulus>"), t.Append("<Exponent>" + System.Convert.ToBase64String(i.Exponent) + "<\/Exponent>"), n && (t.Append("<P>" + System.Convert.ToBase64String(i.P) + "<\/P>"), t.Append("<Q>" + System.Convert.ToBase64String(i.Q) + "<\/Q>"), t.Append("<DP>" + System.Convert.ToBase64String(i.DP) + "<\/DP>"), t.Append("<DQ>" + System.Convert.ToBase64String(i.DQ) + "<\/DQ>"), t.Append("<InverseQ>" + System.Convert.ToBase64String(i.InverseQ) + "<\/InverseQ>"), t.Append("<D>" + System.Convert.ToBase64String(i.D) + "<\/D>")), t.Append("<\/RSAKeyValue>"), t.ToString() }; this.Encrypt = function (n, t) { var i, u = r.call(this), f = u.Modulus.length; if (!t && n.length > f - 11) { i = "The data to be encrypted exceeds the maximum for this modulus of " + u.digitSize + " bytes. Maximum data size is " + (u.digitSize - 11) + " bytes."; Trace.Write(i); throw new System.Security.Cryptography.CryptographicException(i); } if (t && n.length > f - 42) { i = "The data to be encrypted exceeds the maximum for this modulus of " + u.digitSize + " bytes. Maximum data size is " + (u.digitSize - 42) + " bytes."; Trace.Write(i); throw new System.Security.Cryptography.CryptographicException(i); } return s.call(this, u, n, t) }; this.Decrypt = function (n, t) { var i = r.call(this); return c.call(this, i, n, t) }; this.Initialize = function () { arguments.length == 1 && typeof arguments[0] == "number" && (this.KeySize = arguments[0], this.BlockSize = this.KeySize, this.FeedbackSize = this.KeySize) }; this.Initialize.apply(this, arguments) }; System.Type.RegisterNamespace("System.Security.Cryptography"); System.Security.Cryptography.RijndaelManaged = function () { function i(n) { return n & 255 } function n(n) { return n >> 8 & 255 } function r(n) { return n >> 16 & 255 } function u(n) { return n >> 24 & 255 } function d(t, i, r, u) { return n(e[t & 255]) | n(e[i >> 8 & 255]) << 8 | n(e[r >> 16 & 255]) << 16 | n(e[u >>> 24]) << 24 } function tt(n) { var r, t, i = n.length, u = new Array(i / 4); if (n && !(i % 4)) { for (r = 0, t = 0; t < i; t += 4)u[r++] = n[t] | n[t + 1] << 8 | n[t + 2] << 16 | n[t + 3] << 24; return u } } function it(t) { for (var o = 0, s = t.length, e = new Array(s * 4), f = 0; f < s; f++)e[o++] = i(t[f]), e[o++] = n(t[f]), e[o++] = r(t[f]), e[o++] = u(t[f]); return e } function rt(t) { var o, c, e, a, h, v, y = new Array(k + 1), p = t.length, w = new Array(nt), s = new Array(nt), b = 0, l; if (p == 16) v = 10, o = 4; else if (p == 24) v = 12, o = 6; else if (p == 32) v = 14, o = 8; else return; for (c = 0; c < k + 1; c++)y[c] = new Array(4); for (c = 0, e = 0; e < p; e++ , c += 4)w[e] = t[c] | t[c + 1] << 8 | t[c + 2] << 16 | t[c + 3] << 24; for (e = o - 1; e >= 0; e--)s[e] = w[e]; for (a = 0, h = 0, e = 0; e < o && a < v + 1;) { for (; e < o && h < 4; e++ , h++)y[a][h] = s[e]; h == 4 && (a++ , h = 0) } while (a < v + 1) { if (l = s[o - 1], s[0] ^= f[n(l)] | f[r(l)] << 8 | f[u(l)] << 16 | f[i(l)] << 24, s[0] ^= ft[b++], o != 8) for (e = 1; e < o; e++)s[e] ^= s[e - 1]; else { for (e = 1; e < o / 2; e++)s[e] ^= s[e - 1]; for (l = s[o / 2 - 1], s[o / 2] ^= f[i(l)] | f[n(l)] << 8 | f[r(l)] << 16 | f[u(l)] << 24, e = o / 2 + 1; e < o; e++)s[e] ^= s[e - 1] } for (e = 0; e < o && a < v + 1;) { for (; e < o && h < 4; e++ , h++)y[a][h] = s[e]; h == 4 && (a++ , h = 0) } } return this.rounds = v, this.rk = y, this } function et(n, t) { for (var r, u, f, c, l = tt(n), a = t.rounds, v = l[0], y = l[1], p = l[2], w = l[3], i = 0; i < a - 1; i++)r = v ^ t.rk[i][0], u = y ^ t.rk[i][1], f = p ^ t.rk[i][2], c = w ^ t.rk[i][3], v = e[r & 255] ^ o[u >> 8 & 255] ^ s[f >> 16 & 255] ^ h[c >>> 24], y = e[u & 255] ^ o[f >> 8 & 255] ^ s[c >> 16 & 255] ^ h[r >>> 24], p = e[f & 255] ^ o[c >> 8 & 255] ^ s[r >> 16 & 255] ^ h[u >>> 24], w = e[c & 255] ^ o[r >> 8 & 255] ^ s[u >> 16 & 255] ^ h[f >>> 24]; return i = a - 1, r = v ^ t.rk[i][0], u = y ^ t.rk[i][1], f = p ^ t.rk[i][2], c = w ^ t.rk[i][3], l[0] = d(r, u, f, c) ^ t.rk[a][0], l[1] = d(u, f, c, r) ^ t.rk[a][1], l[2] = d(f, c, r, u) ^ t.rk[a][2], l[3] = d(c, r, u, f) ^ t.rk[a][3], it(l) } function ot(t) { for (var e, o = new Array(k + 1), s = new rt(t), h = s.rounds, f = 0; f < k + 1; f++)o[f] = new Array(4), o[f][0] = s.rk[f][0], o[f][1] = s.rk[f][1], o[f][2] = s.rk[f][2], o[f][3] = s.rk[f][3]; for (f = 1; f < h; f++)e = o[f][0], o[f][0] = y[i(e)] ^ p[n(e)] ^ w[r(e)] ^ b[u(e)], e = o[f][1], o[f][1] = y[i(e)] ^ p[n(e)] ^ w[r(e)] ^ b[u(e)], e = o[f][2], o[f][2] = y[i(e)] ^ p[n(e)] ^ w[r(e)] ^ b[u(e)], e = o[f][3], o[f][3] = y[i(e)] ^ p[n(e)] ^ w[r(e)] ^ b[u(e)]; return this.rk = o, this.rounds = h, this } function st(f, e) { for (var s, h, y, p, b = e.rounds, o = tt(f), w = b; w > 1; w--)s = o[0] ^ e.rk[w][0], h = o[1] ^ e.rk[w][1], y = o[2] ^ e.rk[w][2], p = o[3] ^ e.rk[w][3], o[0] = c[i(s)] ^ l[n(p)] ^ a[r(y)] ^ v[u(h)], o[1] = c[i(h)] ^ l[n(s)] ^ a[r(p)] ^ v[u(y)], o[2] = c[i(y)] ^ l[n(h)] ^ a[r(s)] ^ v[u(p)], o[3] = c[i(p)] ^ l[n(y)] ^ a[r(h)] ^ v[u(s)]; return s = o[0] ^ e.rk[1][0], h = o[1] ^ e.rk[1][1], y = o[2] ^ e.rk[1][2], p = o[3] ^ e.rk[1][3], o[0] = t[i(s)] | t[n(p)] << 8 | t[r(y)] << 16 | t[u(h)] << 24, o[1] = t[i(h)] | t[n(s)] << 8 | t[r(p)] << 16 | t[u(y)] << 24, o[2] = t[i(y)] | t[n(h)] << 8 | t[r(s)] << 16 | t[u(p)] << 24, o[3] = t[i(p)] | t[n(y)] << 8 | t[r(h)] << 16 | t[u(s)] << 24, o[0] ^= e.rk[0][0], o[1] ^= e.rk[0][1], o[2] ^= e.rk[0][2], o[3] ^= e.rk[0][3], it(o) } function ut(n, t, i) { var f = n ? n : this.Key, o = new System.Byte(f.length), u, e, r; return System.Buffer.BlockCopy(f, 0, o, 0, f.length), u = t ? t : this.IV, e = new System.Byte(u.length), System.Buffer.BlockCopy(u, 0, e, 0, u.length), r = new System.Security.Cryptography.RijndaelManaged, r.Key = o, r.IV = e, r.Mode = this.Mode, r.Padding = this.Padding, new System.Security.Cryptography.ICryptoTransform(r, i) } function ht() { for (var ft = 283, n, u, nt, d, g, tt, k, it, rt, ut, r, et = f.length, i = 0; i < et; i++)n = f[i] & 255, t[n] = i, u = n << 1, u >= 256 && (u ^= ft), nt = u ^ n, d = i << 1, d >= 256 && (d ^= ft), g = d << 1, g >= 256 && (g ^= ft), tt = g << 1, tt >= 256 && (tt ^= ft), k = tt ^ i, it = k ^ d, rt = k ^ g, ut = tt ^ g ^ d, e[i] = System.BitConverter.ToInt32([u, n, n, nt], 0), o[i] = System.BitConverter.ToInt32([nt, u, n, n], 0), s[i] = System.BitConverter.ToInt32([n, nt, u, n], 0), h[i] = System.BitConverter.ToInt32([n, n, nt, u], 0), r = System.BitConverter.ToInt32Be([it, rt, k, ut], 0), c[n] = r, y[i] = r, r = System.BitConverter.ToInt32([it, ut, k, rt], 0), l[n] = r, p[i] = r, r = System.BitConverter.ToInt32([rt, it, ut, k], 0), a[n] = r, w[i] = r, r = System.BitConverter.ToInt32([k, rt, it, ut], 0), v[n] = r, b[i] = r } var nt, k; this.KeySize = 256; this.BlockSize = 128; this.FeedbackSize = 128; this.IV; this.Key; this.Mode = System.Security.Cryptography.CipherMode.CBC; this.Padding = System.Security.Cryptography.PaddingMode.PKCS7; var g, ft = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], t = new Array(256), e = new Array(256), o = new Array(256), s = new Array(256), h = new Array(256), c = new Array(256), l = new Array(256), a = new Array(256), v = new Array(256), y = new Array(256), p = new Array(256), w = new Array(256), b = new Array(256), f = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22]; nt = 8; k = 14; this.Test = function () { var i = [107, 101, 121], t = [49, 50, 51, 52, 53, 54, 55, 56], u = [237, 253, 97, 202, 188, 24, 196, 254], r = this.Encrypt(i, t), f = this.Decrypt(i, r), n; for (isSuccess = !0, n = 0; n < t.length; n++)if (u[n] != r[n] || t[n] != f[n]) { isSuccess = !1; break } return isSuccess }; this.ExpandKey = function () { }; this.Encrypt = function (n, t, i) { var r, e, s, u, o, f, h; if ((arguments.length == 2, r = this.BlockSize / 8, e = [], n && t) && n.length * 8 == this.KeySize) { for (s = new rt(n), u = 0; u < t.length / r; u++) { o = t.slice(u * r, (u + 1) * r); switch (i) { case System.Security.Cryptography.CipherMode.CBC: for (f = 0; f < r; f++)o[f] ^= this.IV[u * r + f] }h = et(o, s); e = e.concat(h) } return e } }; this.Decrypt = function (n, t, i) { var u = this.BlockSize / 8, e = [], h, r, s, o, f; if (n && t && n.length * 8 == this.KeySize) { for (i || (i = System.Security.Cryptography.CipherMode.ECB), h = new ot(n), r = 0; r < t.length / u; r++) { if (s = t.slice(r * u, (r + 1) * u), o = st(s, h), i == System.Security.Cryptography.CipherMode.CBC) for (f = 0; f < u; f++)o[f] ^= this.IV[r * u + f]; e = e.concat(o) } return e } }; this.CreateEncryptor = function (n, t) { return ut.call(this, n, t, !0) }; this.CreateDecryptor = function (n, t) { return ut.call(this, n, t, !1) }; this.GenerateIV = function () { this.IV = new Array(16); g.GetBytes(this.IV) }; this.GenerateKey = function () { this.Key = new Array(this.KeySize / 8); g.GetBytes(this.Key) }; this.Initialize = function () { g = new System.Security.Cryptography.RNGCryptoServiceProvider; ht(); this.GenerateIV(); this.GenerateKey() }; this.Initialize.apply(this, arguments) };